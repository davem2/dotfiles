T 1454011252 18<llua18>	but rehash isn't a automatic thing
T 1454011264 18<llua18>	> () { local -a commands; ls /; }
T 1454011265 18<machabot18>	llua: bin  dev  etc  lib  macha.jpg  proc  root  tmp usr
T 1454011276 18<llua18>	> () { local -a commands; ls /; typeset -p commands }
T 1454011277 18<machabot18>	llua: bin  dev  etc  lib  macha.jpg  proc  root  tmp usr
T 1454011278 18<machabot18>	llua: typeset -a commands
T 1454011282 18<Mikachu18>	yeah, but the hash isn't actually used to run things
T 1454011299 18<Mikachu18>	> commands[ls]=foo; echo =ls; which ls
T 1454011300 18<machabot18>	llua: commands=(  )
T 1454011300 18<machabot18>	Mikachu: /bin/ls
T 1454011300 18<machabot18>	Mikachu: foo
T 1454011364 18<llua18>	ah
T 1454011365 18<llua18>	derp
T 1454011545 18<Mikachu18>	http://cgit.mika.l3ib.org/cgit/zsh-cvs/commit/?h=mika&id=5ee42d94fcddf3137bf0f99ba75eee9275b0bd11 i never finished investigating this
T 1454011894 18<llua18>	nah, i still don't really understand.
T 1454011913 18<llua18>	why did my first command print hi if the hash isn't used?
T 1454011934 18<Mikachu18>	what?
T 1454011944 18<Mikachu18>	can you clarify which command you mean
T 1454011951 18<llua18>	commands[ls]=/bin/echo; ls hi # that one
T 1454011961 18<Mikachu18>	oh
T 1454011987 18<Mikachu18>	> commands[ls]=foo; ls blep
T 1454011988 18<machabot18>	Mikachu: ls: cannot access blep: No such file or directory
T 1454011993 18<Mikachu18>	> commands[ls]=/dev/null; ls blep
T 1454011994 18<machabot18>	Mikachu: ls: cannot access blep: No such file or directory
T 1454011999 18<Mikachu18>	> commands[ls]=/bin/echo; ls blep
T 1454011999 18<machabot18>	Mikachu: blep
T 1454012002 18<Mikachu18>	indeed
T 1454012019 18<Mikachu18>	i guess there was a reason for my patch after all then, i only tested with 'foo' above
T 1454016172 24*	28cdown_ is now known as 18cdown
T 1454031592 18<llua18>	http://sprunge.us/GIbj
T 1454031636 18<Mikachu18>	that's one way to do it
T 1454031692 18<llua18>	kinda want to git rm it
T 1454031768 18<MinceR18>	metapod used harden
T 1454031846 18<llua18>	son of a...
T 1454031963 18<MinceR18>	:)
T 1454032076 18<phy172918>	llua: needs more mktemp
T 1454032131 18<izabera18>	(and quotes)
T 1454032709 18<llua18>	it's in fpath, so the shebang is slightly pointless. i was going to change them to #autoload, but it seems a few can be ran as a script.
T 1454032777 18*	llua shrugs
T 1454032835 18<Mikachu18>	llua: i would [[ $# == 1 ]] || exit 1 or something
T 1454032858 18<phy172918>	or loop over "$@"
T 1454032871 18<llua18>	it's been like that since 1999, maybe even before.
T 1454032911 18<llua18>	easy patch for someone :D
T 1454032913 18<Mikachu18>	and maybe cp -i || exit 1; mv -i || exit 1
T 1454033753 18<phy172918>	do you accept PRs to your dotfiles?
T 1454033769 18<phy172918>	I've had people open issues on mine
T 1454034238 18<llua18>	my dotfiles aren't anywhere public.
T 1454034319 18<llua18>	i did put my completers on github for awhile, but i was still commiting them into two places so i removed them.
T 1454052448 18<psprint18>	I have a completion. It can have nothing to complete (it enables say functions, and all can be enabled already). How to output a message "All functions enabled" in such case?
T 1454052876 18<psprint18>	zsh/files doesn't support chmod :S
T 1454056370 18<psprint18>	Having alias compdef=my-compdef, how to run function compdef?
T 1454056391 18<ntnn18>	\compdef ?
T 1454056403 18<psprint18>	thanks
T 1454056406 18<psprint18>	found that too
T 1454057944 18<psprint18>	check out this function, pretty neat to ensure reload of a completion: https://github.com/psprint/zplugin/blob/master/zplugin.zsh#L609-L618
T 1454065767 18<psprint18>	How to get string length when KSHARRAYS is set?
T 1454066047 18<osse18>	> setopt KSHARRAYS; str=hello; echo $#str
T 1454066048 18<machabot18>	osse: 5
T 1454066053 18<osse18>	I'm a genius
T 1454066219 18<osse18>	psprint: can you be more specific ?
T 1454067200 18<psprint18>	this doesn't work for me, weird
T 1454067221 18<psprint18>	now it works :///////
T 1454067225 18<psprint18>	dammit, what's going on
T 1454067336 18<psprint18>	another bug that will be left unrecognied, or another my mistake (rather not in this case)
T 1454068637 24*	28cdown_ is now known as 18cdown
T 1454069677 24*	28cdown_ is now known as 18cdown
T 1454070313 24*	28cdown_ is now known as 18cdown
T 1454070756 18<psprint18>	what does the (N) do in e.g. /*(N), is it the option to return null result without error message?
T 1454073331 18<osse18>	yes
T 1454075472 18<psprint18>	thanks
T 1454075596 18<osse18>	psprint: read up on the nullglob option
T 1454076580 18<psprint18>	yeah that's the name, I once remembered it, but it mixed up with nomatch ... modifier(?)
T 1454079202 24*	28nioncode_ is now known as 18nioncode
T 1454085731 18<bougyman18>	I'm stuck on a very old zsh and getting zsh 4.2.6 (x86_64-redhat-linux-gnu)
T 1454085731 18<bougyman18>	vcs_info_wrapper:1: vcs_info: function definition file not found
T 1454085758 18<ft18>	vcs_info appeared first in 4.3.7
T 1454085761 18<bougyman18>	every time I run any command. Is there a way to add vcs_info to this? Google keeps showing me how to use vcs_info and a bunch of addon fucntions.
T 1454085774 18<bougyman18>	is there any way to shoehorn it in to this version?
T 1454085794 18<ft18>	Don't try to use it when it's not available.
T 1454085800 18<ft18>	It's not used by default.
T 1454085959 18<bougyman18>	yes but it's a need.
T 1454085963 18<bougyman18>	so just upgrade zsh, then?
T 1454086037 18<ft18>	If you want it, yes. You can try to use the function files with the old release. But I don't remember, if we're using post 4.2.6 features in there. (We likely do. 4.2.6 is ancient)
T 1454086074 18<ft18>	Released 2005 â˜º
T 1454086083 18<bougyman18>	yeah I know
T 1454086099 18<bougyman18>	this is such an ancient os it's tough getting my tools working
T 1454086108 18<bougyman18>	hoorah
T 1454086119 18<bougyman18>	zsh-5.0.2-14.1.x86_64.rpm installed
T 1454086125 18<bougyman18>	at least it's from this decade.
T 1454093440 18<danielsh18>	hashworks, hi, I was told you had issues with zsh-syntax-highlighting.  If you have further issues (including performance issues) please report them to https://github.com/zsh-users/zsh-syntax-highlighting/issues
T 1454101263 18<stpierre18>	i just updated to zsh 5.0.2 on centos -- not sure what i was on before, as it's not in my logs -- and i'm seeing something really strange where if i use a process substitution in a command, and then go back to it in history, the opening <( is missing: http://www.fpaste.org/316409/45410125/
T 1454101271 18<stpierre18>	has anyone seen this? it completely bewilders me.
T 1454101307 18<stpierre18>	and it's nearly impossible to google for, of course
T 1454101755 18<Mikachu18>	probably a bug that's been fixed, early 5.x had some parsing improvements
T 1454103119 18<stpierre18>	that's what i was afraid of
T 1454103125 18<stpierre18>	welp, rebuilding a newer version here i come
T 1454103574 18<stpierre18>	upgraded to 5.2 and it works
T 1454103575 18<stpierre18>	thanks
T 1454106104 24*	28cdown_ is now known as 18cdown
T 1454106630 24*	28derk0pf is now known as 18orginal
T 1454110285 24*	28jottr_ is now known as 18jottr
T 1454111848 24*	28Otis is now known as 18b
T 1454115569 24*	28Gaga is now known as 18Guest13595
T 1454115857 24*	28mwoodson_ is now known as 18mwoodson
T 1454115857 24*	28ft_ is now known as 18ft
T 1454115860 24*	28Liam- is now known as 18Liam`
T 1454115950 24*	28moogumbo_ is now known as 18moogumbo
T 1454116030 24*	28cstrahan_ is now known as 18cstrahan
T 1454116251 24*	28woky is now known as 18Guest54699
T 1454119518 24*	28nuck is now known as 18Guest8935
T 1454121021 24*	28fow is now known as 18Guest82941
T 1454121077 24*	28Guest82941 is now known as 18fow
T 1454125678 18<jellytux18>	Hi, I want my makefile to use /bin/zsh instead of /bin/sh, is this possible?
T 1454126039 18<jellytux18>	I got it working
T 1454126044 18<jellytux18>	with SHELL=/bin/zsh
T 1454126046 18<jellytux18>	variable
T 1454126053 18<jellytux18>	env
T 1454126092 18<jellytux18>	if [[ -d "profiles/default" ]] ; parse error near ;
T 1454126092 18<nchambers^18>	jellytux: http://stackoverflow.com/questions/10041410/default-profile-in-spring-3-1/10041835
T 1454126096 18<jellytux18>	what am I doing wrong?
T 1454126297 18<jellytux18>	ah seems like you need `\ ` at the end of each line in makefile
T 1454127864 18<jellytux18>	Hi, for file in ./profiles/imac/.*; do echo "file: ${file}"; done;
T 1454127875 18<jellytux18>	when I run this in zsh it runs successfully
T 1454127891 18<jellytux18>	It prints the file path n-times
T 1454127917 18<jellytux18>	but when I do this in my makefile, it only prints blank file paths n-times
T 1454127923 18<jellytux18>	any suggestions?
T 1454127984 18<llua18>	ask ##workingset
T 1454128059 18<jellytux18>	llua: ok, thanks
T 1454130754 18<Mikachu18>	you probably need $$ in a makefile
T 1454134166 18<izabera18>	yeah makefiles are much more expensive
T 1454137409 24*	28strayArchie_ is now known as 18strayArchie
T 1454144125 24*	28RichiH_ is now known as 18RichiH
T 1454147219 24*	28dubf_ is now known as 18dubf
T 1454147793 18<Obszczymucha18>	I'm having problems with unsubscribing from zsh-users mailing list. It says that my email is not subscribed. I checked the headers and my email IS subscribed.
T 1454154881 24*	28sonnyboy is now known as 18Sonny|3oy
T 1454155279 24*	28meiand_ is now known as 18meiand
T 1454156055 18<psprint18>	Bash on Bash coders: http://www.zsh.org/mla/users/2016/msg00084.html
T 1454156076 18<psprint18>	who here is a BASG coder, I bet everyone on #oh-my-zsh i
T 1454156079 18<psprint18>	is*
T 1454156513 18<psprint18>	or bsg coder, even shorter nick name
T 1454156803 18<psprint18>	or absg to be exact, bsg is better
T 1454156821 18<psprint18>	have rude humor when approaching 200 commits to zplugin (170 currently)
T 1454160448 24*	28chandan_ is now known as 18chandan
T 1454162315 18<psprint18>	> a=" "; [[ "$a" = [:space:]## ]] && echo yes || echo no
T 1454162315 18<machabot18>	psprint: no
T 1454162316 18<nchambers^18>	psprint: http://math.stackexchange.com/questions/1611697/e-f-banach-spaces-a-da-subset-e-to-f-closed-densely-defined-unbound
T 1454162339 18<psprint18>	what is this spam?
T 1454162363 18<psprint18>	what is answer to my question, why "no" is the result?
T 1454162609 18<osse18>	> a=" "; [[ "$a" = [[:space:]]## ]] && echo yes || echo no
T 1454162610 18<machabot18>	osse: yes
T 1454162610 18<nchambers^18>	osse: http://math.stackexchange.com/questions/1611697/e-f-banach-spaces-a-da-subset-e-to-f-closed-densely-defined-unbound
T 1454162667 18<osse18>	> echo boo
T 1454162668 18<machabot18>	osse: boo
T 1454162675 18<osse18>	> echo yes
T 1454162676 18<machabot18>	osse: yes
T 1454162779 18<osse18>	> a=" "; [[ "$a" = [[:space:]]## ]] && echo yes || echo no
T 1454162779 18<nchambers^18>	osse: http://math.stackexchange.com/questions/1611697/e-f-banach-spaces-a-da-subset-e-to-f-closed-densely-defined-unbound
T 1454162780 18<machabot18>	osse: yes
T 1454162796 18<osse18>	> a=" "; [[ "$a" = x ]] && echo yes || echo no
T 1454162797 18<machabot18>	osse: no
T 1454162797 18<nchambers^18>	osse: http://math.stackexchange.com/questions/1407972/is-ax-y-z-xy-z-yz-x-a-linear-function
T 1454162812 18<osse18>	hmm, i wonder what triggers it
T 1454163361 18<llua18>	nchambers^: if that is a script, could you disable it please?
T 1454164073 18<psprint18>	I couldn't be a pilot, I bet I would find an edge case in airplain's system instantly
T 1454164118 18<psprint18>	if someone could recognize my talent, I could earn so much money
T 1454164291 18<llua18>	psprint: could you stop with your spam too
T 1454165475 18<psprint18>	ok
T 1454166465 18<nchambers^18>	llua, oops sorry about that. its a joke for another channel and completely forgot about the shell scripting channels. disabling it right now
T 1454166478 18<llua18>	thank you
T 1454166768 24*	28nchambers^ is now known as 18nchambers
T 1454174557 24*	28Guest8935 is now known as 18nuck
T 1454182060 24*	28Senecea is now known as 18Seneca
T 1454182417 24*	28cdown_ is now known as 18cdown
T 1454186671 24*	28Senecea is now known as 18Seneca
T 1454201209 24*	28beb is now known as 18f8l
T 1454209715 24*	28Guest54699 is now known as 18woky
T 1454218347 24*	28govg is now known as 18Guest75090
T 1454237541 18<chandan18>	How can i split a long string literal in zsh?
T 1454237548 18<chandan18>	* in a zsh script
T 1454237575 18<Mikachu18>	generally speaking, you can't
T 1454237590 18<Mikachu18>	if you assign to a parameter, you can do foo=bar; foo+=morebar
T 1454237701 18<chandan18>	Mikachu: ok. I am initializing an associative parameter and the "value" part is a long string literal. I guess, nothing can be done about that
T 1454237709 18<chandan18>	Thanks for your advice
T 1454242046 18<psprint18>	195 commits, will be 200 today, can somebody give me alcohol, maybe you llua
T 1454243999 18<psprint18>	I have a completion function. It runs: compadd "$@" -a - plugins && ret=0. How to colorify the list of plugins (in format "username/pluginname")? Should I somehow target this call at my compadd?: zstyle ':completion:*:options' list-colors '=^(-- *)=34'
T 1454244487 18<izabera18>	> zsh -nc ': << x'; echo $?
T 1454244488 18<machabot18>	izabera: 0
T 1454244492 18<izabera18>	i expected that to print 1
T 1454244574 18<izabera18>	well, ok, just tried and it's valid syntax according to zsh
T 1454244576 18<izabera18>	no idea why
T 1454244632 18<Mikachu18>	i guess EOF is a valid end of a heredoc, can't do it interactively
T 1454245567 18<ljarvis18>	hi there, I'm trying to add the output of git-branch to compdef, is there a function I should use to split the return value of git branch? I'm looking through the docs but a bit overwhelmed atm
T 1454245777 18<Mikachu18>	git branch is not the right git command to get a programmatic list of branches
T 1454245878 18<Mikachu18>	branches=( ${${(f)"$(git for-each-ref --format='%(refname)' refs/heads)"}#refs/heads/} )
T 1454245891 18<psprint18>	I do arguments -C in my _script. echo $curcontext shows: :complete:zplugin:argument-1. I can colorify with: zstyle ':completion:*:zplugin:*:argument-1' list-colors '=*=34'. I wonder why the additional ":*:" before argument-1 ??
T 1454245917 18<ljarvis18>	right yes, thanks Mikachu
T 1454245937 18<Mikachu18>	(if you need inspiration, look at _git)
T 1454246614 18<psprint18>	Turns out using compadd in: compadd "$@" -a - plugins doesn't allow to colorify with list-colors. I think I do zstyle correctly, enter correct context, but compadd is apparently to raw call for it. With what to replace compadd ?
T 1454246648 18<psprint18>	_wanted or something?
T 1454246845 18<psprint18>	apparently yes
T 1454248582 18<wvvu18>	hello
T 1454248621 18<wvvu18>	how to go home/end of a line with home/end buttons? I am in vi mode
T 1454248646 18<wvvu18>	home switches on uneditable mode or something.
T 1454248750 18<wvvu18>	better yet, is there a guide for vi-mode? Some buttons change lower to upper case. I have to edit the line by typing 'i' before. And sometimes that ONLY allows me to write from the character that I pressed 'i' instead of freely along the entire line.
T 1454248882 24*	28over is now known as 18opus
T 1454249327 24*	28earthnat1ve is now known as 18earthnative
T 1454254653 18<llua18>	wvvu: that is how vi behaves. and you can bind the home/end keys to vi-(beginning|end)-of-line
T 1454255321 18<wvvu18>	alright, but how to go home or go back to edit mode?
T 1454255327 18<wvvu18>	is there a short guide for this?
T 1454255535 18<chris218>	given a changed _completion file for a command, can i reload it quickly?
T 1454255630 18<chris218>	ah, just change fpath before the autoload triggers :)
T 1454257696 24*	28Senecea is now known as 18Seneca
T 1454260563 18<psprint18>	205 and no alcohol, only green tea
T 1454261662 18<psprint18>	> echo 'echo Hello, my 0 is $0, argv is $argv' > test_file.sh; source() { emulate -L sh; builtin source "$@"; }; source ./test_file.sh
T 1454261662 18<machabot18>	psprint: Hello, my 0 is source, argv is ./test_file.sh
T 1454261858 18<psprint18>	how to get $0 from argv? it is apparently there, but $argv[1] doesn't show what's expected
T 1454261933 18<psprint18>	hah it's an exception, index '0' works
T 1454274775 24*	28gigetoo_ is now known as 18gigetoo
T 1454278647 18<arogyaman18>	oh-my-zsh or prezto?
T 1454278842 18<osse18>	neither
T 1454278880 18<arogyaman18>	what do you suggest instead?
T 1454278888 18<arogyaman18>	I am quite new to terminal customizations
T 1454278898 18<osse18>	roll your own
T 1454278945 18<arogyaman18>	well, it's going to be a long journey that route
T 1454278957 18<arogyaman18>	@osse thanks for replying
T 1454278962 18<osse18>	yes indeed it will
T 1454278973 18<osse18>	but at least it will be bug-free and less confusing
T 1454279015 18<phy172918>	It might not be bug free, but you will understand why the bugs are there and know what's broken
T 1454279046 18<arogyaman18>	you guys want to share some of your favourite customizations?
T 1454279072 18<osse18>	https://github.com/Osse/dotfiles/blob/master/.zshrc
T 1454279135 18<arogyaman18>	thanks @osse!
T 1454279190 18<phy172918>	well I'm a bit obligated to mention  https://github.com/zsh-users/zsh-syntax-highlighting
T 1454279918 18<arogyaman18>	@phy1729 thanks!
T 1454283066 24*	28totte is now known as 18Guest39881
T 1454283510 24*	28cdown_ is now known as 18cdown
T 1454292313 18<izabera18>	does zsh provide a way to check if a string is valid syntax without using zsh -nc "$string" ?
T 1454294777 18<phy172918>	maybe abuse (z)
T 1454294862 18<Mikachu18>	whether a string is valid syntax depends on your set options, disable/enable -p etc
T 1454294882 18<izabera18>	hence my question
T 1454303382 18<Elronnd18>	For some reason, /s
T 1454303387 18<Elronnd18>	Sorry, typo
T 1454305099 18<Elronnd18>	I'm trying to write a program
T 1454305128 18<Elronnd18>	so I defined a function, "function help_msg() {" and zsh is complaining about "./main.zsh: 3: ./main.zsh: Syntax error: "(" unexpected"
T 1454305132 18<Elronnd18>	any advice?
T 1454306193 20*	Disconnected (20Connection timed out)
T 1454306228 19*	Now talking on 22#zsh
T 1454306228 22*	Topic for 22#zsh is: v5.2 | http://zsh.sf.net/ | http://zshwiki.org/ | http://zsh.sf.net/FAQ/ | http://zshwiki.org/home/docs/wikifaq | http://tinyurl.com/zsh-refcard-pdf | Just ask. | Nobody here or everybody clueless? try the zsh-users mailinglist: http://www.zsh.org/mla
T 1454306228 22*	Topic for 22#zsh set by 26Mikachu!~Mikachu@gimp/developer/Mikachu (24Wed Dec  2 16:54:14 2015)
T 1454306229 -18ChanServ-	[#zsh] Welcome to #zsh! Discussion of the Z Shell and sharing of configs highly encouraged. Enjoy your stay and come back soon!
T 1454306229 22*	Channel 22#zsh url: 24http://www.zsh.org/
T 1454306316 18<sujeet18>	Hi, if I do while vared -p, how can I clear the line in each iteration? (to be like while read)
T 1454306533 18<llua18>	(while read '?prompt' does not clear the line)
T 1454306728 18<sujeet18>	llua, i mean like while read tmp
T 1454306773 18<llua18>	remove the -p
T 1454306785 18<llua18>	and it's argument of course
T 1454307366 18<Mikachu18>	its*
T 1454308352 18<sujeet18>	if you want to prompt for two unrelated variables, do you just not use vared -p?
T 1454308417 18<llua18>	you can clear the line a number of ways, but to be like while read tmp kinda implies that there isn't a prompt at all, it you want to be like it, you don't display a prompt.
T 1454308435 18<llua18>	tput can clear a line
T 1454308488 18<sujeet18>	yeah, i was just surprised that '?prompt' doesn't clear a line either
T 1454309318 18<FoH18>	> echo $TERM
T 1454309319 18<machabot18>	FoH: linux
T 1454309355 18<FoH18>	> echoti sgr0
T 1454309356 18<machabot18>	FoH: No output, exitstatus: 1
T 1454309540 24*	28Miblo_ is now known as 18Miblo
T 1454309681 18<FoH18>	> echoti
T 1454309681 18<machabot18>	FoH: echoti: not enough arguments
T 1454310508 18<FoH18>	> tput sgr0
T 1454310509 18<machabot18>	FoH: tput: unknown terminal "linux"
T 1454311977 24*	28govg is now known as 18Guest83112
T 1454313737 24*	28Ingmar_ is now known as 18Ingmar
T 1454318734 24*	28cdown_ is now known as 18cdown
T 1454321196 24*	28arza| is now known as 18arza
T 1454322617 18<chandan18>	Hi, I am trying loop across three associative arrays as given by http://paste.fedoraproject.org/317046/14543225/raw/
T 1454322636 18<chandan18>	The statement "print -l $combination["4096:16384"]" gives rise to an error
T 1454322642 18<chandan18>	run-xfstests.sh:31: bad math expression: operand expected at `"4096:1638...'
T 1454322654 18<chandan18>	Any suggestions as to how to do the looping correctly?
T 1454322705 18<Mikachu18>	in that context, $combination is a scalar value
T 1454322785 18<chandan18>	Mikachu: you are right. But how can i do the looping correctly?
T 1454322833 18<Mikachu18>	you'd need to copy all the arrays into combination first
T 1454322867 18<Mikachu18>	typeset -A combination; combination=( "${(@kv)arr1}" "${(@kv)arr2}" ... ); for key in $combination; do echo $combination[key]; done
T 1454322946 18<Mikachu18>	or, depending on what you're doing, maybe you can get away with for key value in "${(kv@)arr1}" "${(kv@)arr2}" ... ; do echo $key $value; done
T 1454323005 18<chandan18>	Mikachu: ok. I will try the solutions. Thanks!
T 1454324454 18<armin18>	hi, i can use tab to select from a menu when doing tab-completion. however i can't use shift-tab to switch in reverse-order through possible matches. can i change this somehow?
T 1454326074 18<kurkale6ka18>	armin: bindkey "\e[Z" reverse-menu-complete
T 1454326707 18<armin18>	kurkale6ka: thanks, but that shows no effect here.
T 1454326743 18<Mikachu18>	armin: run cat, press shift-tab, what do you see?
T 1454326759 18<armin18>	^[[Z
T 1454326764 18<armin18>	ah
T 1454326779 18<Mikachu18>	then it should work
T 1454326816 18<armin18>	unfortunately doesn't.
T 1454326860 18<Mikachu18>	what does bindkey -M menuselect '\e[Z' say?
T 1454326912 18<armin18>	Mikachu: got it to work, thanks a lot, works like a charm!
T 1454326920 18<Mikachu18>	what did you do differently?
T 1454326928 18<armin18>	adapted my mindset.
T 1454326932 18<Mikachu18>	that's a bit vague
T 1454326932 18<armin18>	my fault, not yours.
T 1454326944 18<Mikachu18>	well, is it something i can keep in mind to suggest to someone who has a mysterious problem?
T 1454326945 18<armin18>	i simply moved that line to the very end.
T 1454326948 18<Mikachu18>	ah
T 1454326957 18<armin18>	prior i had it where another bindkey in my zshrc was, and that did not work.
T 1454326977 18<Mikachu18>	so you probably have another line that binds shift-tab to something, maybe you should find that too
T 1454327006 18<armin18>	Mikachu: https://gist.github.com/netzverweigerer/8846410d5574651e4c9a
T 1454327043 18<Mikachu18>	i'm going to pretend i didn't see all that prompt code
T 1454327066 18<Mikachu18>	you know you can just eval "$(dircolors)" ?
T 1454327072 18<armin18>	actually, my prompt looks like this: "> ~  "
T 1454327094 18<armin18>	oh
T 1454327167 18<Mikachu18>	ah, your problem is the 'bindkey -e' line, anything you do before that may take effect in the vi keymap instead, if your $EDITOR is vi
T 1454327190 18<osse18>	armin: PAGER='less -p "^GATHER"' man zshcontrib
T 1454327204 18<osse18>	and "Quickstart" a little further down
T 1454327239 18<Mikachu18>	also, don't export SAVE/HISTSIZE/FILE
T 1454327270 18<armin18>	perfect, thanks a lot.
T 1454327329 18<granitosaurus18>	I'm using ohmyzsh and everytime I paste url: http://url.com/test?foo=1 it transforms it to http://url.com/test\?foo\=1 how can I disable this?
T 1454327330 18<armin18>	osse: :-)
T 1454327351 18<Mikachu18>	granitosaurus: usually people want this
T 1454327411 18<granitosaurus18>	but that makes the url invalid, why would I want that?
T 1454327447 18<Mikachu18>	> echo http://url.com/test\?foo\=1
T 1454327448 18<machabot18>	Mikachu: http://url.com/test?foo=1
T 1454327452 18<Mikachu18>	> echo http://url.com/test?foo=1
T 1454327453 18<machabot18>	Mikachu: zsh: no matches found: http://url.com/test?foo=1
T 1454327495 18<granitosaurus18>	Don't get it, it breaks every script that requires url as an argument
T 1454327507 18<Mikachu18>	you're wrong
T 1454327530 18<Mikachu18>	this, of course, is assuming that you're not already typing a "" or '' around the url
T 1454327623 18<granitosaurus18>	wait wait wait, so you're implying that you shouldn't save guard script arguments like an url with quotes?
T 1454327627 18<granitosaurus18>	that's nonsensical
T 1454327646 18<osse18>	granitosaurus: yes you definitely should. and this is exctly what happens automatically for you
T 1454327654 18<Mikachu18>	i'm saying that omz has a plugin, presumably enabled by default, that automatically quotes urls for you when you paste them
T 1454327770 18<armin18>	Mikachu, osse: works like a charm, though the manpage got a bug where a $() is enclosed in single-ticks, not double-ticks that would allow such an expansion, in the 5th code-line of the quickstart section there.
T 1454327781 18<armin18>	(debian testing)
T 1454327806 18<osse18>	brrrp. wrong.
T 1454327808 18<granitosaurus18>	Mikachu: any idea where that plugin is hiding?
T 1454327811 18<osse18>	it needs to be in single quotes
T 1454327850 18<Mikachu18>	granitosaurus: nope, i don't use omz
T 1454327878 18<armin18>	osse: it worked for me after i used double-quotes.
T 1454327885 18<Mikachu18>	it probably didn't
T 1454327895 18<osse18>	armin: try switching branches or cd'ing out of the repo
T 1454327926 18<osse18>	armin: the vcs info message will be evaluated once when you set the prompt. but you need it to be evaluated every time it's shown
T 1454327934 18<armin18>	osse: works.
T 1454327945 18<armin18>	osse: yeah i took care of that.
T 1454327951 18<osse18>	how
T 1454327962 18<Mikachu18>	in the example, promptsubst is used instead of calling the setup code in precmd every prompt
T 1454327967 18<Mikachu18>	both ways have their advantages
T 1454327972 18<Mikachu18>	but the example isn't wrong
T 1454327977 18<armin18>	am i allowed to paste 4 lines here?
T 1454327992 18<osse18>	lord knows I don't give a shit, at least
T 1454328000 18<armin18>	precmd () {
T 1454328001 18<armin18>	vcs_info
T 1454328002 18<armin18>	PS1="%F{5}[%F{2}%n%F{5}] %F{3}%3~ ${vcs_info_msg_0_}%f%# "
T 1454328003 18<armin18>	}
T 1454328005 18<Mikachu18>	well, as long as they aren't each 400 characters
T 1454328006 18<armin18>	like that.
T 1454328015 18<Mikachu18>	yeah, that's how i do it too
T 1454328036 18<Mikachu18>	http://mika.l3ib.org/code/zsh-functions/prompt_mikachu_setup but in a much more convoluted way of course
T 1454328066 18<armin18>	Mikachu: nice one
T 1454328084 18<osse18>	yeah in that case it's fine
T 1454328113 18<Mikachu18>	> foo=bar; print -P '$foo'; setopt promptsubst; print -P '$foo'
T 1454328113 18<machabot18>	Mikachu: $foo
T 1454328113 18<machabot18>	Mikachu: bar
T 1454328131 18<Mikachu18>	> foo=bar bar=baz; print -P "$foo"; setopt promptsubst; print -P "$foo"
T 1454328132 18<machabot18>	Mikachu: bar
T 1454328132 18<machabot18>	Mikachu: bar
T 1454328134 18<Mikachu18>	oop
T 1454328138 18<Mikachu18>	> foo=\$bar bar=baz; print -P "$foo"; setopt promptsubst; print -P "$foo"
T 1454328139 18<machabot18>	Mikachu: $bar
T 1454328139 18<machabot18>	Mikachu: baz
T 1454328163 18<Mikachu18>	^ this is the part you need to be careful with if you have the option enabled
T 1454328172 18<armin18>	interesting.
T 1454328188 18<Mikachu18>	especially if $1 is $(rm ~/.zshrc) and you do print -P $1
T 1454328212 18<Mikachu18>	(basically half cargoculted title-setting examples do that)
T 1454328221 18<Mikachu18>	half of the*
T 1454328238 18<armin18>	so is using "setopt promptsubst" in any way better than using double quotes here?
T 1454328252 18<Mikachu18>	nah
T 1454328261 18<osse18>	armin: it's not relevant for you
T 1454328261 18<Mikachu18>	but the example isn't wrong
T 1454328290 18<armin18>	okay. great. thanks for your kind help.
T 1454331222 18<Wildefyr18>	hi is there a way to get the last arguemnt of the last entered string, but when chaining the commands together with a ; or &&?
T 1454331239 18<llua18>	$_
T 1454331489 18<Wildefyr18>	cheers
T 1454335001 18<nyloc18>	Hi, I have a little problem writing a small function for my zshrc. The example command I use on the cli is :etckeeper pre-install && sudo -u makepkg sh -c "EDITOR=vim yaourt -S fail2ban" && etckeeper post-install
T 1454335001 18<nyloc18>	and I want to write Yaourt -S fail2ban. The function I tried is Yaourt() { etckeeper pre-install && sudo -u makepkg sh -c "EDITOR=vim yaourt \\\"$@\\\"" && etckeeper post-install; } but that doesn't work
T 1454335090 18<nyloc18>	I guess it's somehow because the $@ is expanded in the wrong context. Is there a way to achieve what I want with a zsh function?
T 1454335160 18<llua18>	sh -c 'foo "$@"' _ "$@"
T 1454335411 18<nyloc18>	llua: is this some special syntax?
T 1454335418 18<llua18>	no
T 1454335540 18<nyloc18>	llua: Thanks that works could you explain what the _ "$@" is doing?
T 1454335551 18<llua18>	they are arguments for sh
T 1454335563 18<phy172918>	_ is $0 "$@" are the rest
T 1454335600 18<nyloc18>	phy1729: Ah, now I get it wasn't aware that _ is the same as $0
T 1454335615 18<nyloc18>	Thanks for your help
T 1454335618 18<phy172918>	it's not but you need to provide a _
T 1454335621 18<phy172918>	a $0
T 1454335633 18<phy172918>	_ is just what people seem to typically use
T 1454335670 18<nyloc18>	phy1729: Thanks for the clarification
T 1454335703 18<nyloc18>	and thanks to llua for the solution.
T 1454335817 18<biax_18>	using robbyrussell theme via ssht, when after entering "command [tab completion]" and then backspacing all of them, the command portion isnt visually erased, what could be wrong?
T 1454335897 18<llua18>	the use of oh-my-zsh is wrong
T 1454335906 18<biax_18>	hm?
T 1454335913 18<biax_18>	why so
T 1454335922 18<llua18>	!omz
T 1454335922 18<machabot18>	"omz" is shorthand for "oh-my-zsh", an extension which the consensus of this channel recommends against using.  If you see odd behaviour using omz, please try disabling omz and see if the issue remains.
T 1454335949 18<biax_18>	ok, so whats the recommended means of getting some preset "theme"
T 1454335969 18<biax_18>	plain zsh is too plain
T 1454336002 18<osse18>	the plains of the purple buffalo
T 1454336010 18<llua18>	and omz seems broken for you
T 1454336030 18<llua18>	but if by theme you mean fancy prompt, promptinit
T 1454336183 18<biax_18>	llua: what i want is colored zsh, with 'pretty' completions, and a red/green 'marker' on exit 0/!0
T 1454336301 18<osse18>	biax_:  PS1='%B%F{green}%n%f@%F{%3v}%m%f:%F{blue}%1v%b${vcs_info_msg_0_}%(1j. %F{87}%j%f .)%f%(?..%F{red})$%f'
T 1454336311 18<osse18>	oops, never mind
T 1454336462 18<osse18>	i forgot i had a bunch of psvar stuff in there
T 1454336572 18<llua18>	!undefine omz
T 1454336572 18<machabot18>	llua: Ok!
T 1454336660 18<llua18>	!define omz "omz" is shorthand for "oh-my-zsh", an extension which the consensus of this channel recommends against using.  If you see odd behaviour using omz, please try disabling omz and see if the issue remains. for help with oh-my-zsh, try the channel #oh-my-zsh.
T 1454336660 18<machabot18>	llua: Ok!
T 1454336852 18<llua18>	promptinit can do the red/green `marker' thing, the completion is a seperate thing. if you want something magical that does everything for you like oh-my-zsh, breaking things is part of the deal.
T 1454336892 18<llua18>	"everything"*
T 1454336926 18<osse18>	biax_: (?.%F{green}.%F{red})$%f can do the red/green thing.
T 1454340186 18<biax_18>	osse: k thx, gonna try that
T 1454340193 18<biax_18>	for now, how do i rid of omz?
T 1454340450 18<osse18>	biax_: isn't it just a directory and one line in .zshrc ?
T 1454340484 18<biax_18>	oh is it? k
T 1454340509 18<osse18>	i thkn so
T 1454340582 18<biax_18>	sadly omz does seem a lot easier, everything preconfigured
T 1454340629 18<thrig18>	the wrong way
T 1454340661 18<osse18>	biax_: define "everything"
T 1454340680 18<osse18>	what does it do that's so nice except testing your monitor's gamut
T 1454340746 18<osse18>	ya gotta be frugal b
T 1454343298 24*	28kud is now known as 18_kud
T 1454344268 18<biax_18>	osse: i just want it all readable, with colors and any other useful completions
T 1454344329 18<biax_18>	>$user $dir $errorcolor: nice colors, nice completion
T 1454344347 18<biax_18>	dont wanna spend too much time hand configuring these stuff
T 1454344396 18<biax_18>	googled an alternative, came up something called 'prezto'
T 1454344657 18<llua18>	if it breaks on you, you get to keep both pieces.
T 1454345077 24*	28sysop_host_ is now known as 18sysop_host
T 1454345422 18<osse18>	biax_: most of the fancy usable completion comes bundles with zsh
T 1454349241 18<wvvu18>	is there a guide about wtf does vi-mode?
T 1454349255 18<wvvu18>	the commands and all that?
T 1454349258 18<osse18>	do you know vi ?
T 1454349285 18<wvvu18>	vim. But to use in command line is entirely another story.
T 1454349293 18<wvvu18>	I get confuse about the steps
T 1454349309 18<Valodim18>	stick with emacs mode then
T 1454349310 18<osse18>	if you know vim then it can't possibly be THAT confusing
T 1454349402 18<osse18>	wvvu: maybe it'll help if you add a mode indicator to the prompt
T 1454349492 18<wvvu18>	I type 'i' and ONLY allows travelling editing from the place that i typed 'i'.
T 1454349524 18<osse18>	yes, that's how vi usually works. you've configured vim otherwise
T 1454349556 18<Valodim18>	:set nocompat
T 1454349558 18<Valodim18>	:)
T 1454349577 18<wvvu18>	let's say, "mv kewl-movie-1080-rip.mkv Docs/movies/scifi/", so let's say I type 'i' in the number '8' of the line I can't go backwards!!
T 1454349610 18<wvvu18>	I cat only edit from the number 8 onwards :/
T 1454349622 18<thrig18>	yes, that's how vi behaves.
T 1454349675 18<Valodim18>	looking at it today, it's kinda stupid, but the term "terminal" doesn't have exactly the same meaning as it did back then :)
T 1454349804 18<wvvu18>	":set nocompat" solves it. But now out of curiosity. without the 'nocompat' option. How's the workflow? if insert is in the wrong place, 'esc' move proper place and 'i' again?
T 1454349948 18<osse18>	yes
T 1454349971 18<osse18>	or remap left and backspace to the emacs variant
T 1454350000 18<wvvu18>	damn, crazy.
T 1454350021 18<osse18>	should probably do that in vim as well
T 1454350040 18<wvvu18>	another quesiton, what's the point of home/end changing to lower and upper case?
T 1454350049 18<wvvu18>	I never understood.
T 1454350093 18<osse18>	there is no point. the keys are not mapped, so zsh picks up on the ~ in the byte sequence which in vi(m) toggles the case
T 1454350094 18<wvvu18>	the only scenario where I could think this would be useful is for m$$ cmd.exe. That uses some weird upper case paths.
T 1454350810 18<llua18>	pretty sure those keys are not bound by default.
T 1454350838 18<Valodim18>	they aren't, but they send a sequence starting with ~
T 1454351495 18<ntnn18>	wvvu: there is a vim-like zle mapping linked in the zshwiki iirc
T 1454351503 18<ntnn18>	you might want to have a look at that
T 1454353716 18<hashworks18>	Hi! When using `rm not*existing*file*pattern` ZSH tells me that it hasn't found any matches with that pattern. Could I set it up in any way so it just ignores those?
T 1454353757 18<thrig18>	add (N) somewhere
T 1454353832 18<hashworks18>	What exactly do you mean thrig?
T 1454353898 18<thrig18>	rm doesnotexist*(N)
T 1454353933 18<hashworks18>	ah, thanks thrig!
T 1454354120 18<biax_18>	from wiki: "Add autoload -U colors && colors before PROMPT= in .zshrc to use them. Usually you will want to put these inside %{ [...] %} so the cursor does not move. "
T 1454354127 18<biax_18>	mind giving an example?
T 1454354234 18<ft18>	biax_: These days, actually use %F{red} instead
T 1454354300 18<ft18>	%F is foreground, %K is background.
T 1454354309 18<biax_18>	oh
T 1454354314 18<ft18>	%f and %k stop a previous %F and %K.
T 1454354315 18<biax_18>	i didnt understand the %{ }%
T 1454354325 18<biax_18>	im totally new in this
T 1454354331 18<ft18>	That's %{...%}
T 1454354334 18<biax_18>	so what do i do wit hthat autoload -U etc etc
T 1454354340 18<biax_18>	are they talking about the autoload?
T 1454354353 18<biax_18>	%{autoload -U colors && colors}% ?
T 1454354360 18<ft18>	The reason is that colours work via escape sequences. ie. via addional characters.
T 1454354375 18<phy172918>	you don't need the autoload colors bit
T 1454354402 18<ft18>	the %{...%} tells the prompt code not to count those bytes when determining the prompt's width in characters.
T 1454354476 18<ft18>	biax_: no no. it used to be: PROMPT="%{$fg[red]}%}red text%{$reset_color}normal text"
T 1454354503 18<ft18>	biax_: Instead today, you can do PROMPT=%F{red}red text%fnormal text"
T 1454354518 18<biax_18>	ahh
T 1454354521 18<biax_18>	ok it wasnt clear
T 1454354581 18<ft18>	With the new way, you don't need the $fg etc variables, which means you don't need the colors function anymore, which is why you don't have to autoload it, like phy1729 said.
T 1454354606 18<ft18>	IIRC the %F stuff was introduced in 4.3.7
T 1454354637 18<biax_18>	actually what i ultimately wanna do is have a 'simple' nice layout.. / theme / complettion / colors, wathever
T 1454354643 18<ft18>	...which was released in 2008 or somehting.
T 1454354644 18<biax_18>	omz didnt work out well for me, there were some bugs
T 1454354646 18<biax_18>	or just one rather
T 1454354688 18<ft18>	omz is still the most frequent source of problems in here. â˜º
T 1454355278 18<osse18>	biax_: maybe you'd like to run through zsh's own "welcome to zsh" wizard
T 1454355301 18<osse18>	biax_: sets you up with a basic config with completion etc. afterwards you can copy your brand new prompt in there
T 1454355370 18<biax_18>	hm ok
T 1454363002 18<izabera18>	is there a way to have spaces in global aliases?
T 1454363012 18<izabera18>	s/global//
T 1454363159 18<llua18>	you can define them, so technically yea.
T 1454363399 18<phy172918>	>> alias 'a b'='echo c'; a\ b; 'a b'
T 1454363400 18<machabot18>	phy1729: zsh: command not found: a b
T 1454363400 18<machabot18>	phy1729: zsh: command not found: a b
T 1454363412 18<llua18>	quoting suppresses the expansion
T 1454363415 18<phy172918>	>> aliases['a b']='echo c'; a\ b; 'a b'
T 1454363416 18<machabot18>	phy1729: zsh: command not found: a b
T 1454363416 18<machabot18>	phy1729: zsh: command not found: a b
T 1454363436 18<thrig18>	also, spaces in command names, really?
T 1454363436 18<phy172918>	odd the last one worked for me
T 1454364702 18<izabera18>	> echo x | > >(cat -n) > >(cat -n) | cat -n
T 1454364703 18<machabot18>	izabera:      1 x
T 1454364703 18<machabot18>	izabera:      2      1 x
T 1454364703 18<machabot18>	izabera:      3      1 x
T 1454364729 18<izabera18>	is there a way to only pass lines 2 and 3?
T 1454364742 18<izabera18>	in bash i would use    echo x | tee >(cat -n) >(cat -n) > /dev/null | cat -n
T 1454364974 18<ntnn18>	< file | head -3 | tail -2
T 1454365043 18<ntnn18>	> echo 'this is a test\ntest\test3' | head -3 | tail -2
T 1454365043 18<machabot18>	ntnn: this is a test
T 1454365044 18<machabot18>	ntnn: test est3
T 1454365054 18<ntnn18>	> echo 'this is a test\ntest\ntest3' | head -3 | tail -2
T 1454365054 18<machabot18>	ntnn: test
T 1454365054 18<machabot18>	ntnn: test3
T 1454365058 18<ntnn18>	*hrm*
T 1454365128 18<izabera18>	seriously
T 1454365591 18<ntnn18>	ah
T 1454365634 18<ntnn18>	> { echo x | > >(cat -n) > >(cat -n) } | cat -n
T 1454365635 18<machabot18>	ntnn:      1      1 x
T 1454365635 18<machabot18>	ntnn:      2      1 x
T 1454365644 18<ntnn18>	mhm
T 1454365730 18<izabera18>	ah i see
T 1454365752 18<izabera18>	thanks
T 1454366295 18<foul_owl18>	Is there a command I can run when installing zsh that will automatically pick option "2"?
T 1454366305 18<foul_owl18>	Just trying to script out installing zsh
T 1454366319 18<foul_owl18>	I'm installing via apt
T 1454366326 18<phy172918>	what is option 2?
T 1454366371 18<ntnn18>	> read wombat <<< 2; echo $wombat
T 1454366371 18<machabot18>	ntnn: 2
T 1454366381 18<ntnn18>	but you shouldn't do that. options and input changes
T 1454366417 18<phy172918>	it sounds like a question for #$os but there's not enough context yet
T 1454366420 18<ntnn18>	there's probably an option somewhere that let's you do it automated
T 1454366458 18<ft18>	If this is about debian's package, there is debian's bts as well as #pkg-zsh on this network.
T 1454366507 18<foul_owl18>	Hmm
T 1454366520 18<foul_owl18>	Ah it looks like zsh-common includes a file called /etc/zsh/newuser.zshrc.recommended
T 1454366531 18<foul_owl18>	I can probably just copy that file to ~/.zshrc
T 1454366549 18<ft18>	You might want to take a look at it before. â˜º
T 1454366554 18<ft18>	But you can, yes.
T 1454366639 18<ft18>	I always thought "recommended" was a strong word there. "newuser.zshrc.ideas" might be better. â˜º
T 1454366665 18<ntnn18>	I can see a blogpost coming up 'recommended considered harmful'
T 1454366805 18<phy172918>	/etc/defaults/ considered harmful
T 1454366899 18<ft18>	Well, the file is not sourced by default. it is just a set of suggestions.
T 1454366957 18<ft18>	And I misremembered what was in there. It doesn't look too intrusive; except for maybe "prompt adam1" â˜º
T 1454367729 18<foul_owl18>	Haha
T 1454367741 18<foul_owl18>	Well, bash has some sort of default rc o_O
T 1454367802 18<llua18>	pretty sure it doesn't.
T 1454367845 18<ft18>	Debian's zsh package has a default zshrc as well. It just tries to not interfere a lot.
T 1454368254 18<Valodim18>	it does do some basic keymaps, basically whatever is available from terminfo, del and stuff
T 1454368279 18<osse18>	i ended up copying large parts of it into my own zshrc
T 1454379081 18<FelixDavidson18>	Anyone know how to get paradox working in zsh prezto? I've been trying for 2 days and still can't get it. My fonts look a lot more different than pictures of paradox. If it matters I'm using xterm
T 1454397056 24*	28Miblo_ is now known as 18Miblo
T 1454413669 18<psprint18>	how to download a file with zsh/net/tcp?
T 1454413761 18<psprint18>	it's rather hard task, url can be https
T 1454414521 24*	28cdown_ is now known as 18cdown
T 1454416641 24*	28ionelmc_ is now known as 18ionelmc
T 1454416798 18<izabera18>	just use curl
T 1454417543 18<psprint18>	yes that I will probably do
T 1454417560 18<psprint18>	plus some alternative, wget
T 1454417640 18<psprint18>	done zplugin refcard: http://imageshack.com/a/img924/7014/KKkzny.png, now thinking about a new feature, to download and use snippets of code, not plugins
T 1454417685 18<psprint18>	all lead by a need to support OMZ themes, they use their libs in OMZ/lib subdirectory, git.zsh for example, and themes then use the libraries to display git status etc
T 1454417686 18<psprint18>	i
T 1454417694 18<psprint18>	I could load such library as snippet
T 1454417709 18<psprint18>	but first it needs to be downloaded, thus curl, wget, net/tcp
T 1454417742 18<psprint18>	Their libs: https://github.com/robbyrussell/oh-my-zsh/tree/master/lib
T 1454417841 18<Mikachu18>	if you want to make some sort of 'official' zsh plugin thing, it would probably be better to define a sensible interface than trying to load all the existing piles of dogshit code written for omz
T 1454417939 18<izabera18>	yeah write your own pile of dogshit code
T 1454417943 18<izabera18>	no wait i misunderstood
T 1454417949 18<psprint18>	the code is 2137 lines long, I doubt it will become "official", however it might clarify what's needed on Zsh binary side, and one day a plugin manager needing just 500, maybe 1000 lines of code, will be possible
T 1454418031 18<psprint18>	Mikachu: that's why I pasted link to their libs. One can expect OMZ to be dogshit plugins, but it turns out they have their whole environmet, code base, provided via libs/, I think that's quite interesting that's why I pasted
T 1454418161 18<psprint18>	as to other aspect of what you said, that's why I'm thinking about "snippet" feature: zplugin snippet https://github.com/robbyrussell/oh-my-zsh/blob/master/lib/git.zsh, and a theme for OMZ will work.. but, it's a general feature, to inject code from the network (hah), not specifically targeted at OMZ
T 1454418232 18<psprint18>	Mikachu: with my zplugin I was able to unload your code: https://github.com/oz/safe-paste/blob/master/safe-paste.plugin.zsh, when I'm loading a plugin I track hooks added, to delete them, and widgets overwritten (zle -N self-insert my-self-insert), to restore them
T 1454418243 18<Mikachu18>	why did you say "my code"?
T 1454418262 18<psprint18>	it's not your plugin but a guy there wrote you are the origin of the code
T 1454418332 18<Mikachu18>	i like how they just pasted in that bindkey -e, even leaving the comment that says you have to adapt it to your setup
T 1454418516 18<psprint18>	hah, bindkey -v makes it fully work on my setup
T 1454418566 18<Mikachu18>	not surprising if you use vi mode
T 1454418603 18<Mikachu18>	it's just an example i posted on the mailing list, not production code where i thought about every possible scenario
T 1454418632 18<Mikachu18>	but let's just paste it into omz and load it everywhere without even reading the comments~~~
T 1454418654 18<psprint18>	haha
T 1454418705 18<psprint18>	you switch to `paste' keymap with `bindkey -A paste main', then restore main keymap with -v, a more complete code would probably save main keymap and then restore it from the save?
T 1454418719 18<Mikachu18>	i guess so
T 1454418731 18<Mikachu18>	the whole thing is unneeded though since zsh supports it now
T 1454418935 18<llua18>	you should make a #zplugin
T 1454419076 18<psprint18>	even #oh-my-zsh has only 31 people, I'm rather close to close the #zplugin idea, it's basically implemented, wonder if anyone would use it, only 2 likes on github
T 1454419108 18<psprint18>	although Bart reviewed my code and helped, maybe it's be different
T 1454419202 18<llua18>	gotta protect your intellectual property.
T 1454419223 18<Mikachu18>	#react
T 1454419242 18<llua18>	#lua
T 1454419434 18<psprint18>	i'm right now thinking about some new feature that would give Zplugin new meaning. It currently beautifully allows to manage completions - however completions are with standard distribution mostly, so that's not that important. Loading plugins can be done via zgen or even manual installation, so that's not that important too. Reports are very important though, and unloading. One more important thing I look for,
T 1454419436 18<psprint18>	then it would be all vital
T 1454419794 18<psprint18>	registered the channel.. indeed if there would be 10 people there, 10 people working on Zplugin, it would be very promising
T 1454419843 18<llua18>	and give us a place to punt questions about it to.
T 1454420212 18<psprint18>	Will provide link in README.md on github, with some nice banner ;-) https://kiwiirc.com/client/chat.freenode.net:+6697/#zplugin
T 1454420389 18<psprint18>	https://kiwiirc.com/buttons/chat.freenode.net/zplugin.png
T 1454420527 24*	28jottr_ is now known as 18jottr
T 1454421212 18<psprint18>	thanks for the idea for the channel, and for the examples #react #lua
T 1454422100 24*	28txtsd_ is now known as 18txtsd
T 1454422269 18<Mikachu18>	lol
T 1454422567 18<psprint18>	i guess it was partially a joke or offensive thing but I liked the idea ;-)
T 1454422608 18<psprint18>	if it's going to be a serious project than now I can think about using DEBUG traps or other things.. Although the DEBUG trap is rather usefull to catch single execution of a single command
T 1454422622 18<psprint18>	useless*
T 1454425434 18<psprint18>	Say there is file "a", I want a temporary file with "abc\n" prepended to "a" content. How to do it?
T 1454425516 18<osse18>	cat - a <<<abc > temp
T 1454425538 18<osse18>	{ echo abc; cat a } > temp
T 1454425643 18<osse18>	printf '%s\n' abc "$(< a)" > temp
T 1454425699 18<psprint18>	was hoping for some temp file creating syntax, like <<< or =( )
T 1454425708 18<psprint18>	without cat's and echo's
T 1454425713 18<psprint18>	cats and echos*
T 1454425802 18<psprint18>	that said, why doesn't echo <<<"a test string" give me a name of the temporary file "a test string" was being put into? isn't it that <<< creates a temporary file and gives its name?
T 1454425872 24*	28musca` is now known as 18musca
T 1454425877 18<osse18>	psprint: sounds like you're confusing <<< and =( )
T 1454425914 18<osse18>	<<< creates a tempfile (afaik), but it's for zsh's own use. the command you invoke get the tempfile's contents on stdin
T 1454425924 18<osse18>	(and echo doesn't read stdin so that is pointless)
T 1454425929 18<psprint18>	ahso
T 1454425984 18<osse18>	so you don't want a persistent file?
T 1454426121 18<psprint18>	it would be nice if I could manage to use non-persistent file (not sure if it will be possible now that you point this out) and don't bother with rm -f
T 1454426136 18<osse18>	what are you using it for, then
T 1454426331 18<psprint18>	was thinking about putting "preexec() { echo hello, executing "$1"; }" as a preamble to file that I'm sourcing.. But now I see that preexec() doesn't work that way, it will not be called for commands in file in which it is defined, not even for commands that are sourced from that file
T 1454426476 18<psprint18>	in general, the goal is to catch something non-regular that is done in sourced file, and report that
T 1454430504 18<psprint18>	> trap "echo non-zero;" ZERR; setopt foo
T 1454430505 18<machabot18>	psprint: setopt: no such option: foo
T 1454430510 18<psprint18>	why no echo?
T 1454430540 18<psprint18>	> trap "echo non-zero;" ZERR; setopt foo; echo $?
T 1454430541 18<machabot18>	psprint: setopt: no such option: foo
T 1454430541 18<machabot18>	psprint: 0
T 1454430553 18<psprint18>	quite weird that setopt is not testable
T 1454435117 24*	28squidly_ is now known as 18squidly
T 1454438844 18<NoelLeon18>	hello, maybe this is not the right place to ask but Google isn't helping, perhaps someone knows the answer:
T 1454438902 18<NoelLeon18>	I'm connecting with Putty from a Windows machine to a linux host with zsh, and every time I hit Page Down the terminal enters the ~ character
T 1454438938 18<NoelLeon18>	I've configured .zshrc options regarding input using all $terminfo output
T 1454438959 18<NoelLeon18>	but I guess this is a Putty-specific problem, has anyone had this problem and solved it?
T 1454440516 20*	Disconnected (20Connection reset by peer)
T 1454440548 19*	Now talking on 22#zsh
T 1454440548 22*	Topic for 22#zsh is: v5.2 | http://zsh.sf.net/ | http://zshwiki.org/ | http://zsh.sf.net/FAQ/ | http://zshwiki.org/home/docs/wikifaq | http://tinyurl.com/zsh-refcard-pdf | Just ask. | Nobody here or everybody clueless? try the zsh-users mailinglist: http://www.zsh.org/mla
T 1454440548 22*	Topic for 22#zsh set by 26Mikachu!~Mikachu@gimp/developer/Mikachu (24Wed Dec  2 16:54:14 2015)
T 1454440548 -18ChanServ-	[#zsh] Welcome to #zsh! Discussion of the Z Shell and sharing of configs highly encouraged. Enjoy your stay and come back soon!
T 1454440548 22*	Channel 22#zsh url: 24http://www.zsh.org/
T 1454442675 24*	28madduck__ is now known as 18madduck
T 1454442686 24*	28stryx`_ is now known as 18stryx`
T 1454445810 24*	28plonk_ is now known as 18plonk
