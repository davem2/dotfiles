T 1454441289 18<RedAero18>	[Tritium]: I see it as a no-judgement resource when not participating, i.e. "I have specific problem nr 458, I'll google it, here is specific solution nr 458 which fits like a glove"
T 1454441311 18<RedAero18>	Sure, the glove will give you cancer in the long term, but it works for a bit
T 1454441368 18<[Tritium]18>	RedAero: ... yes.  I know you dont take the site with a grain of salt.  thats the problem.
T 1454441370 18<XHFHX18>	rweir: one thing I also don't understand: If I close the database at the end of download_videos() (which i execute with the timer.py) I get a 'can't operate on a closed database' error. but shouldn't be all varables dropped once the function is executed - so if I rerun the function everything should be new, also the connection to the database?
T 1454441637 18<donald18>	hello with argparse I am trying to make an  optional argument I have already used nargs="?" and I do not know how to take the value of the argument written by the user to the variable in my program
T 1454441708 18<finster18>	donald: dest='myvar' in the argument definition should do
T 1454441722 18<tjung18>	Jordy, oh lol
T 1454441735 18<tjung18>	Jordy, I got it
T 1454441747 18<tjung18>	Jordy, are you there?
T 1454441753 18<Jordy18>	ye
T 1454441790 18<donald18>	please finster give me a link to the doc
T 1454441819 18<finster18>	donald: http://www.google.com/
T 1454441848 18<tjung18>	Jordy, looking through my own code I had once solved that same issue. before calling driver.get do driver.set_window_size(1920, 1080)
T 1454441900 18<tjung18>	Jordy, site was rendering ui for mobile
T 1454441940 18<Jordy18>	coh
T 1454442013 18<Jordy18>	tjung, that gives me The browser appears to have exited before we could connect.
T 1454442030 18<BlueSky18>	What do we call it when a browser uses the HTTP protocol to load a file or page from a server and display it in the browser?
T 1454442037 18<Jordy18>	all I did is putting driver.set_window_size() before calling driver.get()
T 1454442057 18<[Tritium]18>	BlueSky: a request
T 1454442061 18<_habnabit18>	BlueSky, 'browsing the internet'?
T 1454442098 18<alden18>	donald: you don't need nargs, or anything else.  https://dpaste.de/9bqN
T 1454442134 18<BlueSky18>	The Request/Response Cycle
T 1454442136 18<BlueSky18>	?
T 1454442141 18<BlueSky18>	The Request/Response Cycle?
T 1454442148 18<_habnabit18>	BlueSky, are you taking a quiz?
T 1454442158 18<BlueSky18>	yes
T 1454442165 18<_habnabit18>	BlueSky, then please don't ask us to help you cheat
T 1454442179 18<BlueSky18>	Is a homework
T 1454442183 18<_habnabit18>	BlueSky, then please don't ask us to help you cheat
T 1454442198 18<Wooble18>	BlueSky: also, this is #python
T 1454442219 18<[Tritium]18>	BlueSky: a: this is #python b: it is unethical for us to answer quiz questions for you
T 1454442250 18<RedAero18>	I know this is a no lol zone, but wow...
T 1454442257 18<Remram18>	So, if the library you use uses super().__init__(**kwargs)
T 1454442265 18<Remram18>	and you take care of doing the same everywhere
T 1454442270 18<nine_918>	I never knew you couldn't ask for help for the homework
T 1454442275 18<Remram18>	you still get f*** in the *** because object doesn't?
T 1454442295 18<Wooble18>	nine_9: you can ask for help with homework. You can't ask for the answer to your homework; there's a difference.
T 1454442296 18<_habnabit18>	Remram, ... no? why would object need to?
T 1454442302 24*	28sabbie_ is now known as 18sabbie
T 1454442312 18<Remram18>	_habnabit: 'cause at some point the kwargs get to object.__init__() which TypeErrors
T 1454442316 18<_-Slash-_18>	hi
T 1454442331 18<_habnabit18>	Remram, then you haven't consumed all the kwargs, and that's a bug in your application code
T 1454442385 18<Remram18>	that's insane
T 1454442395 18<_habnabit18>	Remram, i don't know what that means
T 1454442401 18<tjung18>	Jordy, it works for me
T 1454442409 18<Wooble18>	suddenly I agree with whoever said earlier that no-argument super() was a bad idea.
T 1454442410 18<Jordy18>	Without the .display?
T 1454442426 18<tjung18>	Jordy, I'm using phantomjs though btw
T 1454442441 18<Jordy18>	What's the difference then? :o
T 1454442455 18<nine_918>	Wooble: oh, sure, I think I've missed the question. As a clarification, I wasn't being ironic or something.
T 1454442465 18<tjung18>	Jordy, I took last line out
T 1454442475 18<rildo_ras_96318>	hi people, someone could help me with this paste ?
T 1454442476 18<rildo_ras_96318>	https://bpaste.net/show/c5a33ea6e1c3
T 1454442501 18<tjung18>	Jordy, I'll try ff now
T 1454442503 18<_habnabit18>	rildo_ras_963, what's a word to you?
T 1454442531 18<Jordy18>	tjung, is it fasteR?
T 1454442582 18<rildo_ras_96318>	habnabit,  I will receive the word that I look for trought a variable
T 1454442591 24*	28Phantomas1 is now known as 18Phantomas
T 1454442605 18<tjung18>	Jordy, yes b/c it's headless so no window appears meaning you can use it on servers
T 1454442629 18<tjung18>	Jordy, trying ff now 1 sec
T 1454442640 18<Wooble18>	rildo_ras_963: how long are your word lists going to be in real life?
T 1454442674 24*	28ProblemC- is now known as 18ProblemChild
T 1454442675 24*	28madduck__ is now known as 18madduck
T 1454442676 18<rildo_ras_96318>	about 30 caracters
T 1454442687 24*	28themacproguy is now known as 18Zachary_DuBois
T 1454442698 18<_habnabit18>	Remram, i just don't know what you think object.__init__ should do with kwargs
T 1454442720 24*	28frem_ is now known as 18frem
T 1454442728 24*	28magic_ is now known as 18magic
T 1454442733 18<disconnected18>	hey, anyone experienced with creating pip packages? How can I run tests from this module https://github.com/uqfoundation/dill
T 1454442735 18<Remram18>	_habnabit: I don't know either. I didn't come up with the super() behavior
T 1454442735 18<disconnected18>	?
T 1454442737 18<Wooble18>	rildo_ras_963: any(word in text2.split() for word in text1.split()) is probably fine, then.
T 1454442751 24*	28bb010g_ is now known as 18bb010g
T 1454442783 18<rildo_ras_96318>	Thanks Wooble, I will try
T 1454442800 18<Wooble18>	rildo_ras_963: (if you need it to scale, probably make sets of words and use set intersection)
T 1454442800 18<_habnabit18>	Remram, i mean, all super does is call the next class on the MRO
T 1454442821 18<_habnabit18>	Remram, clearly you're angry about something, but i don't know if you understand what super _does_
T 1454442835 18<Wooble18>	blinding calling super().__init__(**kwargs) sounds like cargo culting.
T 1454442892 18<tjung18>	Jordy, I dunno man I can't seem to have it do anything in ff
T 1454442915 18<tjung18>	Jordy, but the fix works
T 1454442944 18<Jordy18>	I'l try Phatnomjs then
T 1454442949 18<tjung18>	Jordy, I've just never used this with ff b4
T 1454442950 18<_habnabit18>	Wooble, it's the only sensible way to handle inheritance
T 1454442962 18<_habnabit18>	Wooble, which is, of course, not to say that inheritance in any form is sensible, ...
T 1454442981 18<Wooble18>	_habnabit: how's it sensible to call a method on the superclass with arguments the superclass method doesn't have?
T 1454443023 18<_habnabit18>	Wooble, because the MRO is linearized, the only thing you can do is pass them on and hope something will accept them
T 1454443023 18<XHFHX18>	does anybody know something about database locked errors in sqlite? I'm working now 8 hours on this problem and I'm not one step closer...
T 1454443051 18<wyoung18>	XHFHX: you have more than one process accessing the same file?
T 1454443063 18<XHFHX18>	wyoung: not really
T 1454443071 18<Wooble18>	_habnabit: well, if you're at the top inheriting directly from object, you should know that this is a silly thing to hope for?
T 1454443081 18<MrElendig18>	"not really" means yes :p
T 1454443086 18<_habnabit18>	Wooble, diamond inheritance
T 1454443090 18<wyoung18>	XHFHX: you can run sqlite in daemon mode to allow multiple connections
T 1454443094 18<RedAero18>	xhfhx: Just out if interest, and this may be a stupid question because I only have the faintest clue about what SQLite is, why are you asking about SQLite in #pthon?
T 1454443106 18<_habnabit18>	Wooble, just because _you_ don't inherit from anything but object doesn't mean you're last on the MRO before object
T 1454443114 18<morissette18>	Is there a way to have a default except?
T 1454443120 18<morissette18>	over an entire application
T 1454443126 18<wyoung18>	RedAero: don't be like that man
T 1454443127 18<Wooble18>	morissette: yes, but it's a bad idea.
T 1454443128 18<XHFHX18>	i call the function, wait 10 seconds/minutes and then run the same function again - and there I get a database locked error. If i close the database in the function I get a database is closed error on the 2nd run
T 1454443128 18<morissette18>	to say send a slack notification of they error raised
T 1454443144 18<morissette18>	Wooble, I agree but the idea is to be able to record data
T 1454443146 18<XHFHX18>	RedAero: Because it's how the python-driver of the database behaves
T 1454443150 18<morissette18>	without having to watch logs
T 1454443152 18<wyoung18>	XHFHX: it sounds like you are not closing resources properly
T 1454443162 18<RedAero18>	wyoung: I'm trying to be helpful, genuinely. People in another channel may have more experience with sqlite
T 1454443165 18<morissette18>	Wooble, to create bug requests / code improvement tickets
T 1454443165 18<RandomNoob18>	XHFHX: try to open it in 2nd run
T 1454443177 18<Wooble18>	morissette: wrap your main in a try:? (preferably re-raise the exception...)
T 1454443178 18<_habnabit18>	morissette, raven+sentry is a good way to handle this
T 1454443185 18<RedAero18>	XHFHX: I see. Still, it may be worth a shot to also try in an SQL channel perhaps
T 1454443191 18<MrElendig18>	XHFHX: context managers!
T 1454443200 18<_habnabit18>	morissette, sentry tracks, aggregates, and reports errors, and raven will send them to sentry
T 1454443201 18<tos918>	morissette: (don't use it with the logging framework, but ^)
T 1454443219 18<runciter18>	XHFHX: can you share some code with us?
T 1454443221 18<XHFHX18>	randomnoob: the 3rd command in my function is a connection to the database, which is also made - strangely i still get the error if I close the database at the end
T 1454443224 18<wyoung18>	RedAero: until you ask them a python specific question.  It is kind of a grey area where asking in either channel may be the right thing to do.
T 1454443228 18<morissette18>	Thanks _habnabit Wooble and tos9
T 1454443233 18<XHFHX18>	runciter: 'some' code: https://gist.github.com/capital-G/d73f1f91d675f0b013df
T 1454443242 18<ChrisWarrick18>	RedAero: This is a Python-specific question.  It relates to talking to the sqlite3 database from within Python.
T 1454443274 18<morissette18>	_habnabit, do you know if there is a way to integrate slack w/ these
T 1454443286 18<morissette18>	so I don't have to look at a log each day
T 1454443288 18<runciter18>	XHFHX: whoa, looks like it's all the code :)  we rarely get that!
T 1454443289 18<wyoung18>	XHFHX: shouldnt you call a close on db?
T 1454443292 18<_habnabit18>	morissette, i'm sure sentry can report to slack
T 1454443302 18<RedAero18>	wyoung: I usually ask in both, i.e. selenium and python
T 1454443308 18<morissette18>	_habnabit, kay thanks!
T 1454443310 18<runciter18>	XHFHX: can you share the traceback for the "database locked" exception?
T 1454443317 18<RedAero18>	wyoung: Although to be fair selenium and python are fairly close
T 1454443318 18<ChrisWarrick18>	RedAero: This channel doesn’t mind basic SQL questions, too.
T 1454443325 18<_habnabit18>	morissette, worst case, it can report to irc, and slack has an irc gateway
T 1454443338 18<XHFHX18>	runciter: well, it's about 70% of the code, the flask server is missing and I renamed some things here, it's not runable without the config file.
T 1454443349 18<wyoung18>	RedAero: I don't know what selenium is
T 1454443350 18<ChrisWarrick18>	RedAero: In the future, if you don’t know much about a topic, you may want to refrain from telling people off.
T 1454443356 18<RedAero18>	ChrisWarrick: I know, I didn't mean to come off as if I'm trying to police the discussion, I was just suggesting asking someone else as well
T 1454443371 18<RedAero18>	*somewhere
T 1454443376 18<runciter18>	XHFHX: are you using threads?
T 1454443384 18<Wooble18>	morissette: slack does have a raven integration.
T 1454443393 18<RedAero18>	wyoung: Browser automation for example
T 1454443397 18<Wooble18>	(and a sentry integration)
T 1454443412 18<morissette18>	Wooble, so I could go free w/ raven + slack
T 1454443418 18<morissette18>	vs $29/month
T 1454443421 18<morissette18>	for charts
T 1454443428 18<morissette18>	or whatever sentry is trying to sell
T 1454443439 18<_habnabit18>	sentry is free software
T 1454443453 18<XHFHX18>	runciter: traceback: https://gist.github.com/capital-G/9c89de271b3a677a3dcf
T 1454443466 18<morissette18>	_habnabit, when's the last time you were on there site?
T 1454443474 18<morissette18>	their*
T 1454443479 18<XHFHX18>	runciter: no, no threads
T 1454443488 18<Wooble18>	morissette: they have a free tier mentioned. 250 events per day.
T 1454443505 18<_habnabit18>	morissette, https://github.com/getsentry/sentry
T 1454443509 18<runciter18>	XHFHX: and not multiple processes
T 1454443511 18<wyoung18>	RedAero: ah
T 1454443519 18<XHFHX18>	runciter: nope, only one process
T 1454443531 18<wyoung18>	XHFHX: try closing the database after you have used it
T 1454443624 18<wyoung18>	XHFHX: considering using something like: with sqlite3.connect(db_filename) as conn:
T 1454443656 18<runciter18>	XHFHX: how is it that timer works, then?
T 1454443665 18<morissette18>	....off we go... https://bpaste.net/show/e0deeb665967
T 1454443671 18<XHFHX18>	runciter: see timer.py in the gist
T 1454443720 18<runciter18>	XHFHX: sure, but that loop + sleep will block the process, preventing it from receiving requests
T 1454443723 18<runciter18>	but this isn't happening
T 1454443740 18<XHFHX18>	wyoung: if I close the database I get this on the 2nd run: https://gist.github.com/capital-G/262c73adec152654f918
T 1454443792 18<XHFHX18>	runciter: is there a problem with the timer?
T 1454443808 18<wyoung18>	XHFHX: ummm, when you close make sure you open it again before you use it
T 1454443825 18<XHFHX18>	wyoung: I do that
T 1454443833 18<runciter18>	XHFHX: there are better ways to do this, especially because that loop runs at module level
T 1454443852 18<_3onyc18>	Hey, I'm using socket.makefile to create a writable file with buffering=1 from a socket, however unless I explicitly flush the file the data never gets sent, what am I doing wrong?
T 1454443856 18<runciter18>	XHFHX: but i'm curious to see the code that actually run the timer
T 1454443874 18<XHFHX18>	well, I just execute the timer.py
T 1454443883 18<runciter18>	XHFHX: what do you mean by execute?
T 1454443886 18<pie_18>	hi guys im trying to make a discord-irc bridge using discord.py, is there an irc library you could recommend for the irc side?
T 1454443910 18<runciter18>	XHFHX: also, the timer.py you shared isn't the timer.py that was run to produce the traceback
T 1454443919 18<TheFran18>	pie_, i recommend burning discord
T 1454443925 18<runciter18>	XHFHX: the traceback calls through a main() function that doesn't exist in the pasted timer.py
T 1454443938 18<pie_18>	TheFran: i prefer irc, my friends use discord :/
T 1454443942 18<XHFHX18>	runciter: well, I just double-click on timer.py and let it run to infinity and beyond - this was in the old version where I worked with global variables, such as global database, but I wanted to avoid that now and rewritten 50% of the code
T 1454443947 18<TheFran18>	get better friends
T 1454443949 18<pie_18>	haha
T 1454443953 18<pie_18>	why the hate though?
T 1454443954 18<TheFran18>	discord is awful
T 1454443960 18<TheFran18>	completely unnecessary
T 1454443973 18<Wooble18>	to be fair IRC is pretty awful too.
T 1454443979 18<SegFaultAX18>	What's wrong with Discord?
T 1454443981 18<XHFHX18>	runciter: maybe it's caused by the debug of pycharm, i'll paste a traceback without debugging enabled
T 1454444000 18<TheFran18>	Wooble, it's entirely open and very simple
T 1454444005 18<TheFran18>	discord? proprietary
T 1454444010 18<TheFran18>	use the client or get fucked le lel
T 1454444018 18<pie_18>	well im not a gamer, irc doesnt have voice, theres mumble for something light but at that point youre running two pieces of software
T 1454444026 18<TheFran18>	why would you need voice for chat
T 1454444029 18<pie_18>	well they have an api, im not trying to defend them though
T 1454444032 18<Wooble18>	IRC is the worst chat platform, except for all of the other ones.
T 1454444036 18<TheFran18>	if you want to use voice just use good void like mumble
T 1454444045 18<pie_18>	well you cant exactly type in the middle of an FPS
T 1454444050 18<pie_18>	idk why they use it
T 1454444052 18<TheFran18>	well then install mumble
T 1454444060 18<TheFran18>	it's like using skype for gaming voip
T 1454444060 18<TheFran18>	why
T 1454444073 18<_3onyc18>	pie_: For Python 3 I like Pydle https://github.com/Shizmob/pydle
T 1454444101 18<pie_18>	TheFran: i trieeeed to get them to :C
T 1454444109 18<XHFHX18>	runciter: here's the non-debug traceback: https://gist.github.com/capital-G/64082edaefc58bce1c34
T 1454444113 18<SegFaultAX18>	TheFran: Ok, I understand your viewpoint. I think you can tone it down slightly, though.
T 1454444115 18*	deniska uses skype for gaming, AMA
T 1454444133 18<runciter18>	XHFHX: sorry, had to step away
T 1454444146 18<runciter18>	XHFHX: if you run timer.py by double clicking it, then you are using multiple processes
T 1454444148 24*	28dw_ is now known as 18dw
T 1454444169 18<XHFHX18>	runciter: well, what's the best way then to do it properly?
T 1454444192 18<runciter18>	XHFHX: well, how does flask figure into this?
T 1454444251 18<pie_18>	_3onyc: thanks ill check it out
T 1454444269 18<Jerub18>	does anyone have a copy of python2.4 or python2.5?
T 1454444269 18<pixxel18>	c
T 1454444274 18<XHFHX18>	runciter: well, I have a server.py which runs the flask server
T 1454444303 18<Jerub18>	i need to know what this equals: import ssl; unicode(ssl.SSLError('test'))
T 1454444314 18<pie_18>	TheFran: theres also the fact that it runs on a ton of platforms with minimal setup i think
T 1454444318 18<runciter18>	Jerub: any particular version of python 2.7?
T 1454444319 18<pixxel18>	Jerub: can't you download 2.4 or 2.5 from python.org?
T 1454444336 18<runciter18>	Jerub: hah, sorry, didn't see that ;)
T 1454444337 18<Jerub18>	pixxel: easier to ask someone here.
T 1454444359 18<deniska18>	I doubt you can find many people here running something older than 2.6
T 1454444364 18<runciter18>	XHFHX: what's your server do?
T 1454444370 18<runciter18>	XHFHX: does it write to the database?
T 1454444376 18<_3onyc18>	Jerub: so you can get a bunch of people yelling you shouldn't use 2.4/2.5 and a bunch of other people asking you why and telling you to go to the website? Sounds like going to the website is quicker ;)
T 1454444388 18<XHFHX18>	it's sort of front end to the database, but only querries, doesn't write anything
T 1454444399 18<cjm18>	is there a way to do async methods in python 3.5?
T 1454444403 18<pixxel18>	Jerub: messaged you the download links for those versions
T 1454444412 18<Jerub18>	_3onyc: I'm trying to solve a bug that i think only happens when people use this library on an ancient version.
T 1454444425 18<Jerub18>	it's either a) something screwed up in their ssl install, or b) something changed in python
T 1454444442 18<deniska18>	How many people actually use your lib in 2.5?
T 1454444445 18<XHFHX18>	runciter: I have another function in my __init__.py with which I can download videos by ID via the script, it's nearly the same routine as the timer.py
T 1454444453 18<deniska18>	And how much do you care about them?
T 1454444461 18<XHFHX18>	runciter: that is executable from within the server
T 1454444505 18<runciter18>	Jerub: hm, and it works on pythons < 2.7.9 ?
T 1454444511 18<Wooble18>	Jerub: u'test' (on 2.5)
T 1454444529 18<Jerub18>	Wooble: woo, thanks. definitely screwed ssl lib then
T 1454444551 18<Jerub18>	it's coming out as u"('test,')" in someone's install
T 1454444596 18<deniska18>	__repr__/__str__/__unicode__ is different then
T 1454444612 18<deniska18>	I'm not sute whether __unicode__ magic method even existed back then :)
T 1454444614 18<Jerub18>	deniska: well, i would think the entire ssl module is different.
T 1454444637 18<deniska18>	Jerub: or Exception class is different
T 1454444655 18<Jerub18>	deniska: doubtful. SSLError is implemented in _ssl.c
T 1454444675 18<Jerub18>	so the superclass is compiled in ;)
T 1454444691 18<deniska18>	Jerub: well, it may still subclass Exception
T 1454444694 18<tjung18>	Jordy, working?
T 1454444708 18<Jerub18>	deniska: you'd be surprised what existed back then ;)
T 1454444708 18<Wooble18>	the docs say ssl is "new in python 2.6", so I'm not even sure why 2.5 has it. :/
T 1454444732 18<Jerub18>	Wooble: ... oh god yes. it was once pyopenssl
T 1454444737 18<Jerub18>	or something.
T 1454444748 18<XHFHX18>	runciter: sorry to disturb you, but any advice for me :/
T 1454444749 18<Wooble18>	oh, it's in my site-packages. Probably needed it for Google App Engine.
T 1454444988 18<yan18>	i'm having issues import ctypes (ImportError: /usr/lib/python2.7/lib-dynload/_ctypes.x86_64-linux-gnu.so: undefined symbol: PyFloat_Type). Has anyone seen something like this before?
T 1454445009 18<[Tritium]18>	deniska: __unicode__ does not have an added-in note in the docs, so I think its been there the life of 2x
T 1454445020 18<yan18>	importing*
T 1454445026 18<domino1418>	i want to write a re command to replace all  occurrences of %(foo)s in a string with :foo
T 1454445046 18<domino1418>	my regex looks like: r'(%\([a-zA-Z0-9_/]+\)s)'
T 1454445049 18<[Tritium]18>	deniska: nope, 2.2 (as noted in the unicode() callable docs)
T 1454445057 18<tos918>	domino14: what language are you trying to parse
T 1454445073 18<domino1418>	i want to convert %(foo)s into :foo using Python
T 1454445075 18<domino1418>	in a string
T 1454445088 18<tos918>	domino14: Yes, what language are you parsing?
T 1454445096 18<domino1418>	what?
T 1454445102 18<tos918>	Is it a custom thing, or do you have a real language?
T 1454445105 18<[Tritium]18>	domino14: '%(foo)s' % {'foo': ':foo'} ...i think
T 1454445110 18<tos918>	domino14: Your %(foo) is obviously some sort of templating.
T 1454445112 18<yan18>	domino14: the thing you're parsing, what format s it in
T 1454445122 18<domino1418>	oh, actually, Tritium that makes perfect sense
T 1454445122 18<tos918>	If it is Python's templating for str.__mod__, then you want what [Tritium] said.
T 1454445126 18<Wooble18>	yan: did you build python yourself?
T 1454445132 18<Jerub18>	it actually sounds like you have python string formatting strings and want to substitute them.
T 1454445137 18<domino1418>	It's a string that I built up myself
T 1454445142 18<domino1418>	It's a SQL query
T 1454445146 18<yan18>	Wooble: i'm using a project with Python bindings, so i think it built python itself
T 1454445147 18<deniska18>	oh noes
T 1454445148 18<tos918>	domino14: Oh! Then never ever ever do that.
T 1454445149 18<[Tritium]18>	domino14: STOP!
T 1454445157 18<domino1418>	i want to replace the Python-style named place holders %(...)s with Oracle/Go style :s
T 1454445159 18<deniska18>	panic panic panic :)
T 1454445162 18<domino1418>	:var_name
T 1454445163 18<[Tritium]18>	domino14: use sql paramterization....
T 1454445168 18<yan18>	Wooble: but i don't think it rebuilt it
T 1454445170 18<asdf18>	that's what they're doing, [Tritium]
T 1454445177 18<domino1418>	yes, i'm going to use sql parameterization
T 1454445184 18<deniska18>	ah, he's using regex to fix it :)
T 1454445185 18<tos918>	domino14: Oh, you're handing the string off to go, ok, false alarm.
T 1454445187 18<Jerub18>	class Mirror(dict): def __getitem__(self, name): return name;; "%(foo)s" % Mirror()
T 1454445189 18<asdf18>	domino14, how did you build the string, did you use sqlalchemy?
T 1454445196 18<domino1418>	no, manually
T 1454445199 18<[Tritium]18>	ok, i didnt see that in my panic
T 1454445201 18<domino1418>	yes, exactly, I'm hadning the string ff to go
T 1454445222 18<domino1418>	well not manually, but the vars inside the %(...)s i have full control of
T 1454445223 18<asdf18>	uh, then why put format-style placeholders in the first place, then
T 1454445233 18<domino1418>	because i need this to work with Python as well :(
T 1454445237 18<Jerub18>	oh, return ':' + name
T 1454445239 18<domino1418>	like, i'll run a regex to escap e them
T 1454445240 18<domino1418>	etc
T 1454445245 18<domino1418>	at least for now
T 1454445255 18<deniska18>	domino14: in python you should use dbapi placeholders as well instead of string formatting
T 1454445272 18<asdf18>	it's not exactly a "python" thing, there's python libraries that do also use the :foo paramstyle
T 1454445272 18<domino1418>	dbapi placeholders?
T 1454445272 18<Wooble18>	yan: it sounds like something went horribly wrong when linking.
T 1454445281 18<asdf18>	deniska, %(foo)s is indeed one style of those placeholders
T 1454445305 18<yan18>	Wooble: that dylib does have that symbol though, but yeah it's definitely a linking/loadpath issue
T 1454445344 18<snappy18>	q, i want to break a list based on pattern matching, i have a list of ['foo-0/0/1', 'foo-0/0/2', ...]. Supposing i have foo-X/Y/Z I want to group by X/Y/0 and X/Y/1 where 0 corresponds to Z < 8 and 1 corresponds to Z < 16. To give a concrete example I have some code with the unprocessed list and what i expect afte: https://bpaste.net/show/c8d885d8f4e4
T 1454445348 18<asdf18>	domino14, i'd advise going back to the thing that generated the %(foo)s in the first place, and having it generate the other kind. Sqlalchemy can do either, for example
T 1454445386 18<snappy18>	i know of a few naive ways to approach this, i am looking for hints to do it with itertools or possibly some regular expression group-matching.
T 1454445482 18<Azelphur18>	Hey folks, what is the best way to implement a library to interact with a typical RESTful API? Should I build classes and populate them with data from the JSON? should I just return the JSON?
T 1454445529 18<deniska18>	domino14: re.sub(r'%\(([^)]+)\)', r':\1', 'select * from x where a>%(foo) and b<%(bar)') → 'select * from x where a>:foo and b<:bar'
T 1454445559 18<Azelphur18>	Does anyone know of some really well written examples of the above perhaps for me to review?
T 1454445622 18<simpson18>	Azelphur: You should go with the Sandwich Pattern, IMO. Only deal with JSON (or other serialized stuff) on the edges of your library.
T 1454445640 18<simpson18>	Internally, dicts are just so much easier to work with that I don't know why you'd ever want to have JSON internally.
T 1454445660 18<Azelphur18>	simpson: I see, sorry by returning json I meant returning a dictionary of the json
T 1454445669 18<deniska18>	simpson: some people confuse JSON and data structures returned by json.load :)
T 1454445671 18<Azelphur18>	simpson: versus creating my own objects which you could interact with
T 1454445694 18<Wooble18>	requests calling the method that deserializes ".json()" probably doesn't help :(
T 1454445723 18<simpson18>	Azelphur: Your call. Annoyingly, the interface for dicts doesn't mirror the one for user-defined objects, usually.
T 1454445749 18<Azelphur18>	simpson: yea, I was thinking classes may be good, because you can take actions on the returned things
T 1454445763 18<Azelphur18>	in this case, it's a list of devices, and you can do things with the devices, so I guess it makes sense that a device would be an object rather than a dict
T 1454445766 18<XHFHX18>	whats the best way to loop a function every 10 minutes without spawning multiple processes? currently I have while True: run() time.sleep(10) - but this will cause multiple processes and will kill my database-connection
T 1454445790 18<bpalmer18>	XHFHX: time.sleep doesn't take minutes as an argument, by the way.
T 1454445798 18<deniska18>	XHFHX: what do you want to happen every 10 minutes?
T 1454445810 18<Azelphur18>	XHFHX: is this not a job for cron?
T 1454445820 18<pie_18>	i dont know how to do parallel stuff (i need to learn at some point)
T 1454445821 18<runciter18>	XHFHX: time.sleep doesn't result in multiple processes; double-clicking the python module, though, will spawn a new python process
T 1454445834 18<pie_18>	i imagine i cant call a method in another thread to make it do something?
T 1454445835 18<runciter18>	XHFHX: you have a couple of options, none of which are very good
T 1454445850 18<runciter18>	XHFHX: why do you want to use a timer-based approach here?
T 1454445861 18<bpalmer18>	pie_: why couldn't you?
T 1454445864 18<simpson18>	Azelphur: Look at it this way. Are there any interesting methods you might want to define on your objects? If so, then a class is probably a good idea. If not, then maybe a dict is a better call. It's all about *structure* and *combining state and behavior*.
T 1454445865 18<pie_18>	i.e. if i have an irc client in a thread, how can i make another thread make it join another channel?
T 1454445873 18<ploopkazoo18>	is subprocess.Popen secure against user input injections? would it, for example, be safe to do subprocess.Popen(["echo", x]) where x is untrusted user input?
T 1454445879 18<pie_18>	bpalmer: hm maybe i guess im worried about the event loop or something?
T 1454445884 18<Azelphur18>	simpson: makes sense, I'll follow that approach. Thanks :)
T 1454445885 18<XHFHX18>	Azelphur: windows machine, so no cron aviable
T 1454445892 18<Azelphur18>	XHFHX: s/cron/scheduled tasks
T 1454445892 18<runciter18>	ploopkazoo: it depends on what you're running
T 1454445900 18<pie_18>	i dont really understand how this workds
T 1454445901 18<runciter18>	ploopkazoo: without shell=True, no shell will be involved
T 1454445907 18<bpalmer18>	pie_: you might look at things like "thread communication" in the python cookbook
T 1454445918 18<pie_18>	bpalmer: thanks :)
T 1454445922 18<bpalmer18>	sorry, 'Communicating between threads'
T 1454445945 18<deniska18>	pie_: also you may want to look at async frameworks like asyncio or twisted
T 1454445947 18<XHFHX18>	azelphur: well, the scirpt takes some time, sometimes 10 minutes, someitmes 3 sconds, i stilöl want it only to run every 10 minutes
T 1454445955 18<XHFHX18>	runciter: see above
T 1454445961 18<ploopkazoo18>	runciter: it's running a shell script
T 1454445963 18<Azelphur18>	XHFHX: but not end up with multiple instances?
T 1454445964 18<deniska18>	pie_: which allow you to do multiple things at once without treadin
T 1454445966 18<bpalmer18>	XHFHX: what do you want to do if it takes 11 minutse?
T 1454445967 18<pie_18>	deniska: i tried at one point but i just didnt get it (ill have to take another shot at it later)
T 1454445977 18<runciter18>	XHFHX: why not download a video every time you make a request?
T 1454445989 18<runciter18>	XHFHX: everything could be run in flask, then
T 1454445999 18<XHFHX18>	well, with my former apporoach i wait til it's excuted, wait then 10 minutes and then execute it again. problem is the database connection here
T 1454446035 18<runciter18>	XHFHX: sure, i'm just curious why you've decided on this design,
T 1454446043 18<runciter18>	XHFHX: because there are some difficulties with it
T 1454446050 18<Remram18>	I'm using PyQt5 and somewhat when I used super().__init__(), object.__init__() ends up getting the 'parent' argument
T 1454446055 18<deniska18>	pie_: at which one of those? :)
T 1454446060 18<pie_18>	asyncio
T 1454446063 18<Remram18>	that is obviously destined to QWidget.__init__()
T 1454446064 18<XHFHX18>	runciter: well, it's my first python project, and now I rewritten it a bit
T 1454446080 18<XHFHX18>	more OO, better imports etc
T 1454446095 18<XHFHX18>	and wanted to get rid of the global variables, which was a big mistake i must say :/
T 1454446095 18<runciter18>	ploopkazoo: then it's only as safe as the shell script
T 1454446114 18<runciter18>	ploopkazoo: you probably want to not allow the inheritance of arbitrary environment variables
T 1454446149 18<XHFHX18>	Azelphur: yeah, only one instance, otherwise my sqlite database will kill the script as it locks up because of multiple processes
T 1454446165 24*	28noresult_ is now known as 18noresult
T 1454446168 18<XHFHX18>	damn, it can't be that damn difficult!
T 1454446178 18<Wooble18>	XHFHX: have you considered using a db that handles concurrency better?
T 1454446184 18<runciter18>	XHFHX: it will be difficult without clearly defining your goals
T 1454446191 18<deniska18>	XHFHX: what exactly are you doing every 10 minutes? There might be better ways of approaching your task
T 1454446199 18<runciter18>	XHFHX: if you'd like to learn about concurrency, that's a perfectly good goal
T 1454446221 18<runciter18>	XHFHX: if you'd like to build something that works as soon as possible, then that's also a good goal, but this is the wrong approach
T 1454446241 18<totallyserious18>	If I have a dataframe in pandas how can I look for total count of "Not Tested" in a column?
T 1454446253 18<XHFHX18>	Wooble: Would still needed to be a file-based database with python support. And I don't like the multple processes approach because this has to run for maybe one year without restart on a machine with not high specs
T 1454446274 18<runciter18>	XHFHX: what machine will this run on?  a windows machine?
T 1454446281 18<runciter18>	XHFHX: is this a web service you want to host?
T 1454446310 18<XHFHX18>	runciter: windows machine, web service for intranet
T 1454446325 18<XHFHX18>	but the server part is not that important, it's a nice gimmick that I added
T 1454446332 18<XHFHX18>	but the script is the main thing, that must work
T 1454446352 18<Wooble18>	running a windows machine for a year without restarting seems like a bad idea. There's a new critical security update every 2 weeks.
T 1454446374 18<XHFHX18>	Wooble: We have windows machines that run 7+ years w/o rebooting
T 1454446376 18<Wooble18>	(that's how you know it's The Most Secure OS Ever(tm))
T 1454446398 18<SegFaultAX18>	Wooble: All code has bugs.
T 1454446411 18<XHFHX18>	Wooble: I know that it's not good but I don't make the politics^^
T 1454446438 18<runciter18>	XHFHX: so what's the goal of this project?  what does it take as inputs and outputs?
T 1454446445 18<runciter18>	XHFHX: how are users going to interact with it?
T 1454446465 18<Wooble18>	SegFaultAX: sure. Most projects don't point at the number of critical bugs they've found as proof they're more secure than ones that didn't find that many.
T 1454446476 18<XHFHX18>	no inputs in it's raw form, only fetches some files from a ftp, converts a XML and has a database to know which files it already downloaded. and this executed every n minutes.
T 1454446557 18<SegFaultAX18>	Wooble: The fact that Windows constantly receives security updates (along with other patches) is a sign of maturity and stability.
T 1454446579 18<XHFHX18>	runciter: I'm a bit frustrated because I went away from the global variables approach and made the import a lot more tidied up and now everything works except the timer and that's really.. -.-
T 1454446586 18*	SegFaultAX is not a windows user at all
T 1454446619 18<runciter18>	XHFHX: can you share the previous version that worked?
T 1454446636 18<runciter18>	XHFHX: how were you handling the timer before?
T 1454446657 18<bpalmer18>	XHFHX: have you made sure to add db.close() calls ?
T 1454446658 18<XHFHX18>	runciter: the timer is exactly the same
T 1454446677 18<XHFHX18>	if I add db.close() at the end i get the error that the database is closed on the 2nd run#
T 1454446692 18<bpalmer18>	hmm, link to your code again?
T 1454446703 18<runciter18>	XHFHX: so the "database locked" exception has to do with running multiple processes, not with importing anything
T 1454446717 18<runciter18>	XHFHX: that is to say -- you would have run into that exception if you had two instances of your program running
T 1454446717 18<XHFHX18>	runciter: which I totaly don't get because I always thought once the function is executed the scope of the function is deleted and I start at zero on the next loop
T 1454446730 18<runciter18>	XHFHX: modules aren't functions
T 1454446742 18<runciter18>	XHFHX: they have a very different lifetime
T 1454446752 18<XHFHX18>	runciter: On the former approach I made the database-object global on the first run of the script
T 1454446799 18<deniska18>	you should either pass a connection around
T 1454446801 18<deniska18>	or keep it global
T 1454446807 18<deniska18>	it is still possible with modules
T 1454446818 18<runciter18>	XHFHX: sure -- but if you took that older code, and ran two instances of it by say, double-clicking it twice, you'd have the same OperationalError
T 1454446850 18<XHFHX18>	runciter: probably, but it's not intended to run in two instances
T 1454446903 18<runciter18>	XHFHX: sure, so my point is - the database locked error is unrelated to the code changes you've made
T 1454446918 18<runciter18>	XHFHX: make sure there's only one instance of your code running
T 1454446941 18<XHFHX18>	runciter: and how? :/
T 1454447085 18<XHFHX18>	runciter: pretty intresting error if I set db global: sqlite3.InterfaceError: Error binding parameter 0 - probably unsupported type. on the 2nd run, but much later
T 1454447307 18<runciter18>	XHFHX: that's a programming error -- you've asked sqlite to bind a vleu of a type it doesn't understand
T 1454447328 18<runciter18>	XHFHX: for instance, cursor.execute(statement, (Decimal('10.2'),))
T 1454447442 18<Norbin18>	when do you guys inherit a class from a parent class? can you give a use-case of some sort? as far as i can tell, the "sub class" will take the same arguments as the parent class, so missing the functionality a bit
T 1454447484 18<folkrav18>	Norbin: care being a bit more specific? There are different reasons...
T 1454447496 18<notdaniel18>	Norbin: you might build a generic class that a ton of others will share, but deviate from slightly
T 1454447604 18<XHFHX18>	runciter: but I don't get why this is only an error on the 2nd run, as on the first run it's executed without any problems
T 1454447625 18<Norbin18>	so let's say i have something like Class2(Class1): -> Class2 can have more(new/extra) but not any less(different) arguments than Class1, is that correct? when calling class2 you will have to provide the arguments set in Class1(x, x ,x) and any additional args you added in Class2(Class1, x, x)?
T 1454447672 18<domino1418>	thanks deniska
T 1454447674 18<runciter18>	XHFHX: are you giving it the same data each time?
T 1454447692 18<XHFHX18>	i havent debugged it but it should be
T 1454447713 18<Dewin18>	Norbin: Class2's __init__ can take an entirely different set of arguments.  It probably wants to call super().__init__  at some point and will need to know what values to pass along to do so, but it's not strictly required.
T 1454447714 18<XHFHX18>	wouldn't see why on the 2nd run the variables should be different then on the first run
T 1454447727 18<XHFHX18>	runciter: but on the other hand - you have this strange database behaviour
T 1454447735 18<runciter18>	what strange behavior?
T 1454447744 18<runciter18>	XHFHX: perhaps you've given it the data in a different order
T 1454447744 18<XHFHX18>	runciter: well, the database thing etc
T 1454447752 18<runciter18>	what database thing?
T 1454447792 18<XHFHX18>	runciter: see above, the whole thing with the processes
T 1454447820 18<runciter18>	XHFHX: that's because you started more than one process
T 1454447828 18<XHFHX18>	runciter: my problem is that I don't get what's so difficult to just say: do this, wait 10 minutes and then repeat the first thing again as were nothing, and loop that to infinity
T 1454447849 18<folkrav18>	Norbin: the arguments you pass are those of __init__, and you don't have to keep the same arguments, you don't even need to call the parent's __init__ through super(SubClass, self).__init__(args)
T 1454447889 18<runciter18>	XHFHX: i don't know that it is or isn't difficult in general.  it is certainly difficult if you don't have a very clear idea of what you'd like to do and what's going on
T 1454447900 18<runciter18>	XHFHX: so, we can solve the first issue by not spawning more than one process
T 1454447914 18<runciter18>	XHFHX: and we know that if you get that "database is locked" error, another process is running
T 1454447919 18<runciter18>	XHFHX: that's progress!
T 1454447932 18<runciter18>	XHFHX: i leave it to you to determine what the other process is
T 1454447942 18<runciter18>	XHFHX: now, as for the bind error
T 1454447956 18<runciter18>	XHFHX: can you share the data you're putting into your program?
T 1454447986 18<XHFHX18>	runciter: i don't enter anything except a config-file which has some passwords, that I can't share :/
T 1454447997 18<domino1418>	what is r':\1' ?
T 1454448027 18<runciter18>	XHFHX: can you share the bind error's traceback?
T 1454448031 18<runciter18>	domino14: a raw string literal
T 1454448032 18<XHFHX18>	runciter: I don't get why there should be at all spwaned a new process
T 1454448036 18<XHFHX18>	runciter: of course
T 1454448069 18<domino1418>	i mean as a regex
T 1454448087 18<domino1418>	doesn't \1 only match a single group?
T 1454448094 18<bpalmer18>	(I have my suspicion that it's the same process interfering with itself)
T 1454448100 18<csed18>	So uh, yeah. I'm doing this exercise. It's asking me to do a list comprehension that turns a range(999) into an arbitrary base. So 5 would be (1,0,1) etc.
T 1454448106 24*	28luist_ is now known as 18luist
T 1454448109 18<csed18>	I'm uh, sort of stuck.
T 1454448138 18<bpalmer18>	csed: range(999), a list of 1000 elements, is supposed to become a number?
T 1454448140 18<XHFHX18>	runciter: actually I made a mistake, it's already an error on the first run
T 1454448143 18<runciter18>	domino14: it's a capture group
T 1454448150 18<Wooble18>	999 elements *
T 1454448155 18<runciter18>	XHFHX: because you spawned another process :)
T 1454448160 18<bpalmer18>	Wooble: oops.
T 1454448168 18<XHFHX18>	well, but that's one thing I mwill probably solve, but I don't have any clue about this processes :/
T 1454448181 18<domino1418>	how did re.sub(r'%\(([^)]+)\)s', r':\1', query) replace all of the args correctly?
T 1454448182 18<runciter18>	XHFHX: if you double click your main python file, then also run it under pycharm, you have at least two instances of your code running
T 1454448207 18<Wooble18>	but... yeah, how does range(999), 5 map to (1,0,1) ? :/
T 1454448216 18<domino1418>	i thought
T 1454448220 18<csed18>	bpalmer: Yeah, so something like (it's actually a dict comprehension) { k:(k[2],k[1],[k0]) for k in range(1000)} Would be from decimal to decimal, but you'd have to str(k), and even then you'd get an index error unless you left padded.
T 1454448221 18<domino1418>	\1 only matched the first group
T 1454448268 18<csed18>	And uh, this needs to be for arbitrary bases.
T 1454448278 18<csed18>	It's got me stumped.
T 1454448296 18<XHFHX18>	runciter: actually I don't get an error if i spawn one process via CLI and another one via pycharm...
T 1454448302 18<csed18>	Something with short division, maybe?
T 1454448352 18<Wooble18>	csed: and you're expected to cram the whole thing into one line? :/
T 1454448354 18<csed18>	On a side note, stumped. StumpWM. Whomp whomp.
T 1454448362 18<csed18>	Wooble: Yyyyeah.
T 1454448387 18<csed18>	I've re-read the exercise who knows how many times, because I kept going "how the hell". But, that's the exercise.
T 1454448391 18<bpalmer18>	csed: I still don't understand. Let me suggest what I think the question may be: given a number n, you're supposed to convert it into a sequence of numbers, where each number in the sequence represents a digit in an arbitrary base?
T 1454448392 18<runciter18>	XHFHX: you will, eventually
T 1454448410 18<bpalmer18>	csed: is that it?
T 1454448450 18<bpalmer18>	(And once you've done that, you will demonstrate it by doing this 999 or 1000 times)
T 1454448451 18<csed18>	bpalmer: I, think so. So n = 5 would be (1,0,1) in base 2 and (0,0,5) in base 10.
T 1454448454 18<XHFHX18>	runciter: but well, they 2 run til the 2nd time and fail there
T 1454448460 18<csed18>	bpalmer: Yep.
T 1454448461 24*	28NomadJim_ is now known as 18NomadJim
T 1454448474 18<runciter18>	XHFHX: can you share the error?
T 1454448479 18<Wooble18>	csed: how do you determine how many digits to use? clearly 999 in base < 10 won't fit into 3...
T 1454448490 18<XHFHX18>	runciter: database is locked
T 1454448493 18<XHFHX18>	on the 2nd run
T 1454448516 18<bpalmer18>	csed: have you ever converted numbers among bases by hand before?
T 1454448524 18<csed18>	Wooble: That's a good point. The exercise doesn't mention that.
T 1454448547 18<runciter18>	XHFHX: sure, that will happen
T 1454448555 18<runciter18>	XHFHX: it will not happen if you only have one process running
T 1454448559 18<csed18>	bpalmer: Yeah. At One Point (tm). I mean, I can convert it from one base to another. Doing that in a dict comprehension is the problem.
T 1454448562 18<XHFHX18>	runciter: but on both processes only on the 2nd run
T 1454448570 18<bpalmer18>	csed: don't do it in a dict comprehension, then.
T 1454448581 18<XHFHX18>	runciter: when i spwan them at the same time I don't get a database locked error
T 1454448586 18<csed18>	bpalmer: That's what the exercise says.
T 1454448587 18<bpalmer18>	csed: make a function to do it; then eventually call the function.
T 1454448591 18<XHFHX18>	runciter: only at the 2nd run
T 1454448610 18<csed18>	bpalmer: Functions still haven't been introduced. Don't think that's the point.
T 1454448631 18<bpalmer18>	... *blink* comprehensions before functions?
T 1454448646 18<runciter18>	XHFHX: what do you mean by second run?
T 1454448647 18<Wooble18>	that's... something.
T 1454448673 18<csed18>	bpalmer: Ayup. This is from "Coding The Matrix" on Coursera, by the way. Linear Algebra in Python.
T 1454448677 18<deniska18>	unless you are in school, "weren't introduced" isn't an excuse :)
T 1454448701 18<csed18>	deniska: By "weren't introduces" I mean I don't know whether it'd be considered fair to use something that hasn't been introduced in the solution.
T 1454448705 18<csed18>	introduced*
T 1454448708 18<XHFHX18>	runciter: well, one time the main function, then timer.sleep and after that the main function again where it fails
T 1454448745 18<runciter18>	XHFHX: the two processes' behaviors happen to line up the second time
T 1454448754 18<csed18>	deniska: Think of it like KnR exercises. If you look up the solutions, 90% of them only use aspects of C that've been introduced.
T 1454448760 18<runciter18>	XHFHX: the important thing is not that it happens after N iterations, it's that it happens
T 1454448777 18<runciter18>	XHFHX: and anyway, you yourself said there should only be one instance running :)
T 1454448784 18<Norbin18>	folkrav: thanks. fairly new, i make sure to read the docs but nothing beats trying it yourself :p would you mind telling me in this example i wrote now, how would you for example, inside PerformActions class functions, check whether a function from GdriveFileCheck class returned false/true? http://pastebin.com/ejW3VdqX
T 1454448784 18<infobob18>	http://paste.pound-python.org/show/7LV0cKxFL96aISOWsOon/ (repasted for Norbin)
T 1454448791 18<XHFHX18>	runciter: yeah, i unstertood that. but how do I loop my function without spwaning multiple processes?
T 1454448867 18<runciter18>	XHFHX: if you've started one on the CLI, don't start another without killing that one
T 1454448880 18<runciter18>	XHFHX: if you've started one with pycharm, don't start another without killing that one
T 1454448883 18<runciter18>	XHFHX: etc
T 1454448922 18<XHFHX18>	runciter: yeah, of course
T 1454448936 18<XHFHX18>	runciter: but I need some kind of timer
T 1454448946 18<bpalmer18>	csed: I can't think of a way to correctly do it for arbitrary n in a one liner without abusing a recursive lambda
T 1454448947 18<runciter18>	XHFHX: sure, the timer has nothing to do with this
T 1454448974 18<XHFHX18>	runciter: well, wheres the problem then?
T 1454448976 18<bpalmer18>	csed: on the other hand, the exercise specifies up to 1000 , so for any given base b , you know the maximum number of digits it will be.
T 1454448994 18<collin3818>	csed: do you have to deal with bases > 10?
T 1454449005 18<bpalmer18>	and, for that matter, you wrote an example (0, 0, 5) for 5 in base 10
T 1454449020 18<dyce18>	how is async any different than spawning a thread that does x?
T 1454449035 18<runciter18>	XHFHX: there are multiple problems, right?
T 1454449035 18<MrElendig18>	dyce: cooperative multitasking
T 1454449036 18<csed18>	collin38: They weren't mentioned. So I'd go with no.
T 1454449056 18<runciter18>	XHFHX: the first problem was this database locked stuff, that has to do you with you clicking around and spawning more than one process -- we've got that one licked, i think
T 1454449064 18<XHFHX18>	runciter: for me theres only the database lockup problem
T 1454449066 18<runciter18>	XHFHX: the second problem is unsupported bind types
T 1454449086 18<XHFHX18>	runciter: no, that happens if I only run one timer.py
T 1454449095 18<runciter18>	XHFHX: right, which you should be doing, because you only want one
T 1454449108 18<XHFHX18>	runciter: the unsupported bound types are a problem i cuased by adding a , by mistake
T 1454449119 18<XHFHX18>	runciter: yeah, but the database still locks up
T 1454449129 18<collin3818>	bpalmer: oh, you can definitely do something with (x%b^3, x%b^2, x%b) for x in range(999), right?
T 1454449139 18<runciter18>	XHFHX: you have more than one process running, and you should use windows' tools to figure out how many are running
T 1454449151 18<collin3818>	bpalmer: or something like that
T 1454449172 18<csed18>	collin38: Wouldn't that be ^2 ^1 ^0?
T 1454449183 18<collin3818>	x%1?
T 1454449192 18<XHFHX18>	runciter: acutally not
T 1454449209 18<XHFHX18>	i only execute the timer.py once
T 1454449222 18<XHFHX18>	and theres only one window and one process in the task manager
T 1454449233 18<dyce18>	MrElendig: but essentially its like spawning a thread that has an action on fail/success? but async is scheduled with the OS differently?
T 1454449240 18<csed18>	collin38: In what context?
T 1454449288 18<collin3818>	b^0 = 1
T 1454449293 18<collin3818>	for all bases
T 1454449301 18<runciter18>	XHFHX: are you trying to use pydev?
T 1454449308 18<runciter18>	or whatever that thing is
T 1454449311 18<runciter18>	your debugger
T 1454449315 18<deniska18>	dyce: async isn't scheduled by OS in the sense threads are
T 1454449318 18<csed18>	collin38: It'd be x * b^0
T 1454449325 18<XHFHX18>	runciter: no, i just want to run it normally
T 1454449345 18<deniska18>	csed: btw, don't you mean ** instead of ^?
T 1454449348 24*	28Icedream- is now known as 18Icedream
T 1454449365 18<dyce18>	deniska: async has its own builtin scheduler of some sort?
T 1454449384 18<csed18>	deniska: Yep, cheers. Used that notation for some reason.
T 1454449414 18<dyce18>	since its just a single thread
T 1454449414 18<deniska18>	dyce: yes, it has an event loop
T 1454449416 18<collin3818>	csed: sorry: (x/b^2, (x-x/b^2)/b, x-((x-x/b^2)/b)) ?
T 1454449443 18<deniska18>	dyce: it sits waiting for IO event to happen, when it happens, it executes stuff which was waiting for that IO event
T 1454449468 18<collin3818>	csed: hmm, still wrong
T 1454449475 18<csed18>	collin38: Yar.
T 1454449491 18<csed18>	This isn't like, urgent. Or whatever. I was just stumped so I figured I'd ask you guys.
T 1454449501 18<csed18>	StumpWM. Whomp whomp.
T 1454449570 18<Juzzy18>	I'm trying to catch an exception with a real simple test, can anyone tell me why this isn't working? https://bpaste.net/show/24734c028e1d
T 1454449678 18<nedbat18>	Juzzy: you are catching a different exception than you think you are.
T 1454449678 18<bulls18>	except names the error afaik
T 1454449689 18<nedbat18>	Juzzy: you want to make your try block as narrow as possible.
T 1454449709 18<Juzzy18>	so try: then the if: ?
T 1454449729 18<deniska18>	no
T 1454449730 18<nedbat18>	Juzzy: what exception are you trying to catch? What operation, and how does it fail?
T 1454449738 18<bulls18>	I think the error there would possibly be KeyError?
T 1454449744 18<bulls18>	so except KeyError: ?
T 1454449753 18<Juzzy18>	the error is in the comment, the object is null
T 1454449753 18<nedbat18>	Juzzy: also, btw, when showing an error happening, you should show the full error report.
T 1454449766 18<Juzzy18>	lemme get that...
T 1454449771 18<nedbat18>	Juzzy: is that from line 14?
T 1454449791 18<Juzzy18>	f.write(s3key.name.encode('utf-8') + " missing\n")
T 1454449804 18<Juzzy18>	that's the line above, the rest is nothing improtant
T 1454449805 18<collin3818>	csed: what do you do if you need more than 3 digits for the number
T 1454449818 18<Juzzy18>	I'm basically if (badobject) and I cant catch it for some reason
T 1454449837 18<csed18>	collin38: You mean > 999? He only talks about range(1000), so I'd say nothing.
T 1454449838 18<pdtpatrick18>	Juzzy: paste the full stack ..
T 1454449854 18<Juzzy18>	k, 1 sec
T 1454449913 18<Juzzy18>	https://bpaste.net/show/8c882f5e9d1d
T 1454449925 18<collin3818>	csed: no, like 512 in base 2 is 1000000000
T 1454449927 18<bpalmer18>	999 needs more than 3 numbers in base 2
T 1454449935 18<nedbat18>	Juzzy: I don't know for sure, but I think line 5 assigns None to s3key.  Then line 7 fails with an attribute error.  That goes to your except: clause, where line 14 fails the same way.
T 1454449946 18<Juzzy18>	actually I moved try down 1 line and fixed indent, still the same though
T 1454449967 18<Juzzy18>	nedbat: ah duh, good call
T 1454449976 18<Juzzy18>	brainfart there, thanks :D
T 1454450004 18<csed18>	collin38, bpalmer: So it doesn't say anything about that. The difficulty/lack of details is making me think that the exercise is meant to just mess with you, rather than be doable.
T 1454450011 18<Juzzy18>	boom, that was it, sheesh
T 1454450019 18<nedbat18>	Juzzy: this is why you should use narrow catches.
T 1454450031 18<Juzzy18>	thanks nedbat/pdtpatrick
T 1454450043 18<collin3818>	csed: sounds great
T 1454450058 18<csed18>	collin38: Fixes my problem, is nothing else.
T 1454450065 18<csed18>	if*
